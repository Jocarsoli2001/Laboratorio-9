

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 19:26:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  02F0                     __pidataBANK0:
   217                           
   218                           ;initializer for _disp_selector
   219  02F0  3401               	retlw	1
   220  000B                     _INTCONbits	set	11
   221  0001                     _TMR0	set	1
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0005                     _PORTA	set	5
   225  0007                     _PORTC	set	7
   226  001F                     _ADCON0bits	set	31
   227  000C                     _PIR1bits	set	12
   228  001E                     _ADRESH	set	30
   229  005A                     _T0IF	set	90
   230  008C                     _PIE1bits	set	140
   231  009F                     _ADCON1bits	set	159
   232  0081                     _OPTION_REGbits	set	129
   233  008F                     _OSCCONbits	set	143
   234  0089                     _TRISE	set	137
   235  0088                     _TRISD	set	136
   236  0087                     _TRISC	set	135
   237  0085                     _TRISA	set	133
   238  0189                     _ANSELH	set	393
   239  0188                     _ANSEL	set	392
   240                           
   241                           	psect	cinit
   242  0015                     start_initialization:	
   243                           ; #config settings
   244                           
   245  0015                     __initialization:
   246                           
   247                           ; Initialize objects allocated to BANK0
   248  0015  120A  118A  22F0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   249  001A  00B3               	movwf	__pdataBANK0& (0+127)
   250                           
   251                           ; Clear objects allocated to BANK0
   252  001B  01A0               	clrf	__pbssBANK0& (0+127)
   253  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   254  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   255  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   256  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   257  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   258  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   259  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   260  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   261  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   262  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   263  0026                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266  0026                     __end_of__initialization:
   267  0026  0183               	clrf	3
   268  0027  120A  118A  2AB8   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0
   271  0020                     __pbssBANK0:
   272  0020                     _dig:
   273  0020                     	ds	6
   274  0026                     _cont_vol:
   275  0026                     	ds	2
   276  0028                     _cont2:
   277  0028                     	ds	2
   278  002A                     _digi:
   279  002A                     	ds	1
   280                           
   281                           	psect	dataBANK0
   282  0033                     __pdataBANK0:
   283  0033                     _disp_selector:
   284  0033                     	ds	1
   285                           
   286                           	psect	cstackCOMMON
   287  0070                     __pcstackCOMMON:
   288  0070                     ?_divisor:
   289  0070                     ?_tmr0:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_tmr0:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_displays:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_setup:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_isr:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_tabla:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_tabla_p:	
   311                           ; 2 bytes @ 0x0
   312                           
   313  0070                     ?___awdiv:	
   314                           ; 2 bytes @ 0x0
   315                           
   316  0070                     ?___awmod:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0070                     tabla@a:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     tabla_p@a:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ___awdiv@divisor:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     ___awmod@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0070                     	ds	2
   334  0072                     ??_displays:
   335  0072                     ??_tabla:	
   336                           ; 1 bytes @ 0x2
   337                           
   338  0072                     ??_tabla_p:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0072                     ___awdiv@dividend:	
   342                           ; 1 bytes @ 0x2
   343                           
   344  0072                     ___awmod@dividend:	
   345                           ; 2 bytes @ 0x2
   346                           
   347                           
   348                           ; 2 bytes @ 0x2
   349  0072                     	ds	2
   350  0074                     ??___awdiv:
   351  0074                     ??___awmod:	
   352                           ; 1 bytes @ 0x4
   353                           
   354                           
   355                           ; 1 bytes @ 0x4
   356  0074                     	ds	1
   357  0075                     ___awdiv@counter:
   358  0075                     ___awmod@counter:	
   359                           ; 1 bytes @ 0x5
   360                           
   361                           
   362                           ; 1 bytes @ 0x5
   363  0075                     	ds	1
   364  0076                     ___awdiv@sign:
   365  0076                     ___awmod@sign:	
   366                           ; 1 bytes @ 0x6
   367                           
   368                           
   369                           ; 1 bytes @ 0x6
   370  0076                     	ds	1
   371  0077                     ___awdiv@quotient:
   372                           
   373                           ; 2 bytes @ 0x7
   374  0077                     	ds	2
   375  0079                     ??_divisor:
   376                           
   377                           ; 1 bytes @ 0x9
   378  0079                     	ds	3
   379  007C                     divisor@i:
   380                           
   381                           ; 2 bytes @ 0xC
   382  007C                     	ds	2
   383                           
   384                           	psect	cstackBANK0
   385  002B                     __pcstackBANK0:
   386  002B                     ??_isr:
   387                           
   388                           ; 1 bytes @ 0x0
   389  002B                     	ds	6
   390  0031                     ??_setup:
   391                           
   392                           ; 1 bytes @ 0x6
   393  0031                     	ds	1
   394  0032                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x7
   397  0032                     	ds	1
   398                           
   399                           	psect	maintext
   400  02B8                     __pmaintext:	
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 78 in file "LAB9.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       1       0       0       0
   423 ;;      Totals:         0       1       0       0       0
   424 ;;Total ram usage:        1 bytes
   425 ;; Hardware stack levels required when called: 4
   426 ;; This function calls:
   427 ;;		_setup
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _main
   435  02B8                     _main:
   436  02B8                     l1447:	
   437                           ;incstack = 0
   438                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   439                           
   440                           
   441                           ;LAB9.c: 79:     setup();
   442  02B8  120A  118A  2238  120A  118A  	fcall	_setup
   443  02BD                     l1449:
   444                           
   445                           ;LAB9.c: 80:     ADCON0bits.GO = 1;
   446  02BD  1283               	bcf	3,5	;RP0=0, select bank0
   447  02BE  1303               	bcf	3,6	;RP1=0, select bank0
   448  02BF  149F               	bsf	31,1	;volatile
   449  02C0                     l1451:
   450                           
   451                           ;LAB9.c: 82:         if(ADCON0bits.GO == 0){
   452  02C0  189F               	btfsc	31,1	;volatile
   453  02C1  2AC3               	goto	u551
   454  02C2  2AC4               	goto	u550
   455  02C3                     u551:
   456  02C3  2AC0               	goto	l1451
   457  02C4                     u550:
   458  02C4                     l1453:
   459                           
   460                           ;LAB9.c: 83:             if(ADCON0bits.CHS == 1){
   461  02C4  0C1F               	rrf	31,w	;volatile
   462  02C5  00B2               	movwf	??_main
   463  02C6  0C32               	rrf	??_main,w
   464  02C7  390F               	andlw	15
   465  02C8  3A01               	xorlw	1
   466  02C9  1D03               	skipz
   467  02CA  2ACC               	goto	u561
   468  02CB  2ACD               	goto	u560
   469  02CC                     u561:
   470  02CC  2AD7               	goto	l1459
   471  02CD                     u560:
   472  02CD                     l1455:
   473                           
   474                           ;LAB9.c: 84:                 ADCON0bits.CHS = 0;
   475  02CD  30C3               	movlw	-61
   476  02CE  059F               	andwf	31,f	;volatile
   477  02CF                     l1457:
   478                           
   479                           ;LAB9.c: 85:                 _delay((unsigned long)((50)*(4000000/4000000.0)));
   480  02CF  300F               	movlw	15
   481  02D0  1283               	bcf	3,5	;RP0=0, select bank0
   482  02D1  1303               	bcf	3,6	;RP1=0, select bank0
   483  02D2  00B2               	movwf	??_main
   484  02D3                     u577:
   485  02D3  0BB2               	decfsz	??_main,f
   486  02D4  2AD3               	goto	u577
   487  02D5  2AD6               	nop2
   488                           
   489                           ;LAB9.c: 86:             }
   490  02D6  2ADC               	goto	l1463
   491  02D7                     l1459:
   492                           
   493                           ;LAB9.c: 88:                 ADCON0bits.CHS = 1;
   494  02D7  081F               	movf	31,w	;volatile
   495  02D8  39C3               	andlw	-61
   496  02D9  3804               	iorlw	4
   497  02DA  009F               	movwf	31	;volatile
   498  02DB  2ACF               	goto	l1457
   499  02DC                     l1463:
   500                           
   501                           ;LAB9.c: 91:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   502  02DC  300F               	movlw	15
   503  02DD  1283               	bcf	3,5	;RP0=0, select bank0
   504  02DE  1303               	bcf	3,6	;RP1=0, select bank0
   505  02DF  00B2               	movwf	??_main
   506  02E0                     u587:
   507  02E0  0BB2               	decfsz	??_main,f
   508  02E1  2AE0               	goto	u587
   509  02E2  2AE3               	nop2
   510  02E3                     l1465:
   511                           
   512                           ;LAB9.c: 92:             ADCON0bits.GO = 1;
   513  02E3  1283               	bcf	3,5	;RP0=0, select bank0
   514  02E4  1303               	bcf	3,6	;RP1=0, select bank0
   515  02E5  149F               	bsf	31,1	;volatile
   516  02E6  2AC0               	goto	l1451
   517  02E7  120A  118A  2812   	ljmp	start
   518  02EA                     __end_of_main:
   519                           
   520                           	psect	text1
   521  0238                     __ptext1:	
   522 ;; *************** function _setup *****************
   523 ;; Defined at:
   524 ;;		line 98 in file "LAB9.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       1       0       0       0
   541 ;;      Totals:         0       1       0       0       0
   542 ;;Total ram usage:        1 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 3
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _setup
   554  0238                     _setup:
   555  0238                     l1377:	
   556                           ;incstack = 0
   557                           ; Regs used in _setup: [wreg+status,2+status,0]
   558                           
   559                           
   560                           ;LAB9.c: 101:     ANSEL = 0b00000011;
   561  0238  3003               	movlw	3
   562  0239  1683               	bsf	3,5	;RP0=1, select bank3
   563  023A  1703               	bsf	3,6	;RP1=1, select bank3
   564  023B  0088               	movwf	8	;volatile
   565  023C                     l1379:
   566                           
   567                           ;LAB9.c: 102:     ANSELH = 0;
   568  023C  0189               	clrf	9	;volatile
   569  023D                     l1381:
   570                           
   571                           ;LAB9.c: 104:     TRISA = 0b00000011;
   572  023D  3003               	movlw	3
   573  023E  1683               	bsf	3,5	;RP0=1, select bank1
   574  023F  1303               	bcf	3,6	;RP1=0, select bank1
   575  0240  0085               	movwf	5	;volatile
   576                           
   577                           ;LAB9.c: 105:     TRISC = 0;
   578  0241  0187               	clrf	7	;volatile
   579                           
   580                           ;LAB9.c: 106:     TRISD = 0;
   581  0242  0188               	clrf	8	;volatile
   582                           
   583                           ;LAB9.c: 107:     TRISE = 0;
   584  0243  0189               	clrf	9	;volatile
   585                           
   586                           ;LAB9.c: 109:     PORTA = 0;
   587  0244  1283               	bcf	3,5	;RP0=0, select bank0
   588  0245  1303               	bcf	3,6	;RP1=0, select bank0
   589  0246  0185               	clrf	5	;volatile
   590                           
   591                           ;LAB9.c: 110:     PORTD = 0;
   592  0247  0188               	clrf	8	;volatile
   593                           
   594                           ;LAB9.c: 111:     PORTC = 0;
   595  0248  0187               	clrf	7	;volatile
   596                           
   597                           ;LAB9.c: 112:     PORTE = 0;
   598  0249  0189               	clrf	9	;volatile
   599  024A                     l1383:
   600                           
   601                           ;LAB9.c: 115:     OSCCONbits.IRCF = 0b0110;
   602  024A  1683               	bsf	3,5	;RP0=1, select bank1
   603  024B  1303               	bcf	3,6	;RP1=0, select bank1
   604  024C  080F               	movf	15,w	;volatile
   605  024D  398F               	andlw	-113
   606  024E  3860               	iorlw	96
   607  024F  008F               	movwf	15	;volatile
   608  0250                     l1385:
   609                           
   610                           ;LAB9.c: 116:     OSCCONbits.SCS = 1;
   611  0250  140F               	bsf	15,0	;volatile
   612  0251                     l1387:
   613                           
   614                           ;LAB9.c: 119:     OPTION_REGbits.T0CS = 0;
   615  0251  1281               	bcf	1,5	;volatile
   616  0252                     l1389:
   617                           
   618                           ;LAB9.c: 120:     OPTION_REGbits.T0SE = 0;
   619  0252  1201               	bcf	1,4	;volatile
   620  0253                     l1391:
   621                           
   622                           ;LAB9.c: 121:     OPTION_REGbits.PSA = 0;
   623  0253  1181               	bcf	1,3	;volatile
   624  0254                     l1393:
   625                           
   626                           ;LAB9.c: 122:     OPTION_REGbits.PS2 = 1;
   627  0254  1501               	bsf	1,2	;volatile
   628  0255                     l1395:
   629                           
   630                           ;LAB9.c: 123:     OPTION_REGbits.PS1 = 1;
   631  0255  1481               	bsf	1,1	;volatile
   632  0256                     l1397:
   633                           
   634                           ;LAB9.c: 124:     OPTION_REGbits.PS0 = 1;
   635  0256  1401               	bsf	1,0	;volatile
   636  0257                     l1399:
   637                           
   638                           ;LAB9.c: 125:     TMR0 = 237;
   639  0257  30ED               	movlw	237
   640  0258  1283               	bcf	3,5	;RP0=0, select bank0
   641  0259  1303               	bcf	3,6	;RP1=0, select bank0
   642  025A  0081               	movwf	1	;volatile
   643  025B                     l1401:
   644                           
   645                           ;LAB9.c: 128:     ADCON1bits.ADFM = 0;
   646  025B  1683               	bsf	3,5	;RP0=1, select bank1
   647  025C  1303               	bcf	3,6	;RP1=0, select bank1
   648  025D  139F               	bcf	31,7	;volatile
   649  025E                     l1403:
   650                           
   651                           ;LAB9.c: 129:     ADCON1bits.VCFG0 = 0;
   652  025E  121F               	bcf	31,4	;volatile
   653  025F                     l1405:
   654                           
   655                           ;LAB9.c: 130:     ADCON1bits.VCFG1 = 0;
   656  025F  129F               	bcf	31,5	;volatile
   657  0260                     l1407:
   658                           
   659                           ;LAB9.c: 132:     ADCON0bits.ADCS = 0b01;
   660  0260  1283               	bcf	3,5	;RP0=0, select bank0
   661  0261  1303               	bcf	3,6	;RP1=0, select bank0
   662  0262  081F               	movf	31,w	;volatile
   663  0263  393F               	andlw	-193
   664  0264  3840               	iorlw	64
   665  0265  009F               	movwf	31	;volatile
   666  0266                     l1409:
   667                           
   668                           ;LAB9.c: 133:     ADCON0bits.CHS = 0;
   669  0266  30C3               	movlw	-61
   670  0267  059F               	andwf	31,f	;volatile
   671  0268                     l1411:
   672                           
   673                           ;LAB9.c: 134:     ADCON0bits.ADON = 1;
   674  0268  141F               	bsf	31,0	;volatile
   675  0269                     l1413:
   676                           
   677                           ;LAB9.c: 135:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   678  0269  300F               	movlw	15
   679  026A  1283               	bcf	3,5	;RP0=0, select bank0
   680  026B  1303               	bcf	3,6	;RP1=0, select bank0
   681  026C  00B1               	movwf	??_setup
   682  026D                     u597:
   683  026D  0BB1               	decfsz	??_setup,f
   684  026E  2A6D               	goto	u597
   685  026F  2A70               	nop2
   686  0270                     l1415:
   687                           
   688                           ;LAB9.c: 138:     INTCONbits.T0IF = 0;
   689  0270  110B               	bcf	11,2	;volatile
   690  0271                     l1417:
   691                           
   692                           ;LAB9.c: 139:     INTCONbits.T0IE = 1;
   693  0271  168B               	bsf	11,5	;volatile
   694  0272                     l1419:
   695                           
   696                           ;LAB9.c: 140:     INTCONbits.GIE = 1;
   697  0272  178B               	bsf	11,7	;volatile
   698  0273                     l1421:
   699                           
   700                           ;LAB9.c: 141:     PIR1bits.ADIF = 0;
   701  0273  1283               	bcf	3,5	;RP0=0, select bank0
   702  0274  1303               	bcf	3,6	;RP1=0, select bank0
   703  0275  130C               	bcf	12,6	;volatile
   704  0276                     l1423:
   705                           
   706                           ;LAB9.c: 142:     PIE1bits.ADIE = 1;
   707  0276  1683               	bsf	3,5	;RP0=1, select bank1
   708  0277  1303               	bcf	3,6	;RP1=0, select bank1
   709  0278  170C               	bsf	12,6	;volatile
   710  0279                     l1425:
   711                           
   712                           ;LAB9.c: 143:     INTCONbits.PEIE = 1;
   713  0279  170B               	bsf	11,6	;volatile
   714  027A                     l87:
   715  027A  0008               	return
   716  027B                     __end_of_setup:
   717                           
   718                           	psect	text2
   719  027B                     __ptext2:	
   720 ;; *************** function _isr *****************
   721 ;; Defined at:
   722 ;;		line 60 in file "LAB9.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       6       0       0       0
   739 ;;      Totals:         0       6       0       0       0
   740 ;;Total ram usage:        6 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 2
   743 ;; This function calls:
   744 ;;		_displays
   745 ;;		_divisor
   746 ;;		_tmr0
   747 ;; This function is called by:
   748 ;;		Interrupt level 1
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _isr
   754  027B                     _isr:
   755  027B                     i1l1429:
   756                           
   757                           ;LAB9.c: 61:     if(PIR1bits.ADIF){
   758  027B  1F0C               	btfss	12,6	;volatile
   759  027C  2A7E               	goto	u52_21
   760  027D  2A7F               	goto	u52_20
   761  027E                     u52_21:
   762  027E  2A9D               	goto	i1l1441
   763  027F                     u52_20:
   764  027F                     i1l1431:
   765                           
   766                           ;LAB9.c: 62:         if(ADCON0bits.CHS == 1){
   767  027F  0C1F               	rrf	31,w	;volatile
   768  0280  00AB               	movwf	??_isr
   769  0281  0C2B               	rrf	??_isr,w
   770  0282  390F               	andlw	15
   771  0283  3A01               	xorlw	1
   772  0284  1D03               	skipz
   773  0285  2A87               	goto	u53_21
   774  0286  2A88               	goto	u53_20
   775  0287                     u53_21:
   776  0287  2A98               	goto	i1l1437
   777  0288                     u53_20:
   778  0288                     i1l1433:
   779                           
   780                           ;LAB9.c: 63:             cont_vol = 2*ADRESH;
   781  0288  081E               	movf	30,w	;volatile
   782  0289  00AB               	movwf	??_isr
   783  028A  01AC               	clrf	??_isr+1
   784  028B  1003               	clrc
   785  028C  0DAB               	rlf	??_isr,f
   786  028D  0DAC               	rlf	??_isr+1,f
   787  028E  082B               	movf	??_isr,w
   788  028F  00A6               	movwf	_cont_vol
   789  0290  082C               	movf	??_isr+1,w
   790  0291  00A7               	movwf	_cont_vol+1
   791  0292                     i1l1435:
   792                           
   793                           ;LAB9.c: 64:             divisor();
   794  0292  120A  118A  219C  120A  118A  	fcall	_divisor
   795                           
   796                           ;LAB9.c: 65:         }
   797  0297  2A9A               	goto	i1l1439
   798  0298                     i1l1437:
   799                           
   800                           ;LAB9.c: 67:             PORTC = ADRESH;
   801  0298  081E               	movf	30,w	;volatile
   802  0299  0087               	movwf	7	;volatile
   803  029A                     i1l1439:
   804                           
   805                           ;LAB9.c: 69:         PIR1bits.ADIF = 0;
   806  029A  1283               	bcf	3,5	;RP0=0, select bank0
   807  029B  1303               	bcf	3,6	;RP1=0, select bank0
   808  029C  130C               	bcf	12,6	;volatile
   809  029D                     i1l1441:
   810                           
   811                           ;LAB9.c: 71:     if(T0IF){
   812  029D  1D0B               	btfss	11,2	;volatile
   813  029E  2AA0               	goto	u54_21
   814  029F  2AA1               	goto	u54_20
   815  02A0                     u54_21:
   816  02A0  2AAB               	goto	i1l73
   817  02A1                     u54_20:
   818  02A1                     i1l1443:
   819                           
   820                           ;LAB9.c: 72:         tmr0();
   821  02A1  120A  118A  22EA  120A  118A  	fcall	_tmr0
   822  02A6                     i1l1445:
   823                           
   824                           ;LAB9.c: 73:         displays();
   825  02A6  120A  118A  21EF  120A  118A  	fcall	_displays
   826  02AB                     i1l73:
   827  02AB  1283               	bcf	3,5	;RP0=0, select bank0
   828  02AC  1303               	bcf	3,6	;RP1=0, select bank0
   829  02AD  0830               	movf	??_isr+5,w
   830  02AE  00FF               	movwf	btemp+1
   831  02AF  082F               	movf	??_isr+4,w
   832  02B0  008A               	movwf	10
   833  02B1  082E               	movf	??_isr+3,w
   834  02B2  0084               	movwf	4
   835  02B3  0E2D               	swapf	??_isr+2,w
   836  02B4  0083               	movwf	3
   837  02B5  0EFE               	swapf	btemp,f
   838  02B6  0E7E               	swapf	btemp,w
   839  02B7  0009               	retfie
   840  02B8                     __end_of_isr:
   841                           
   842                           	psect	intentry
   843  0004                     __pintentry:	
   844                           ;incstack = 0
   845                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   846                           
   847  0004                     interrupt_function:
   848  007E                     saved_w	set	btemp
   849  0004  00FE               	movwf	btemp
   850  0005  0E03               	swapf	3,w
   851  0006  1283               	bcf	3,5	;RP0=0, select bank0
   852  0007  1303               	bcf	3,6	;RP1=0, select bank0
   853  0008  00AD               	movwf	??_isr+2
   854  0009  0804               	movf	4,w
   855  000A  00AE               	movwf	??_isr+3
   856  000B  080A               	movf	10,w
   857  000C  00AF               	movwf	??_isr+4
   858  000D  087F               	movf	btemp+1,w
   859  000E  00B0               	movwf	??_isr+5
   860  000F  120A  118A  2A7B   	ljmp	_isr
   861                           
   862                           	psect	text3
   863  02EA                     __ptext3:	
   864 ;; *************** function _tmr0 *****************
   865 ;; Defined at:
   866 ;;		line 148 in file "LAB9.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_isr
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _tmr0
   895  02EA                     _tmr0:
   896  02EA                     i1l1351:	
   897                           ;incstack = 0
   898                           ; Regs used in _tmr0: [wreg]
   899                           
   900                           
   901                           ;LAB9.c: 149:     INTCONbits.T0IF = 0;
   902  02EA  110B               	bcf	11,2	;volatile
   903  02EB                     i1l1353:
   904                           
   905                           ;LAB9.c: 150:     TMR0 = 237;
   906  02EB  30ED               	movlw	237
   907  02EC  1283               	bcf	3,5	;RP0=0, select bank0
   908  02ED  1303               	bcf	3,6	;RP1=0, select bank0
   909  02EE  0081               	movwf	1	;volatile
   910  02EF                     i1l90:
   911  02EF  0008               	return
   912  02F0                     __end_of_tmr0:
   913                           
   914                           	psect	text4
   915  019C                     __ptext4:	
   916 ;; *************** function _divisor *****************
   917 ;; Defined at:
   918 ;;		line 154 in file "LAB9.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  i               2   12[COMMON] int 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         2       0       0       0       0
   934 ;;      Temps:          3       0       0       0       0
   935 ;;      Totals:         5       0       0       0       0
   936 ;;Total ram usage:        5 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 1
   939 ;; This function calls:
   940 ;;		___awdiv
   941 ;;		___awmod
   942 ;; This function is called by:
   943 ;;		_isr
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _divisor
   949  019C                     _divisor:
   950  019C                     i1l1339:	
   951                           ;incstack = 0
   952                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   953                           
   954                           
   955                           ;LAB9.c: 155:     for(int i = 0; i<3 ; i++){
   956  019C  01FC               	clrf	divisor@i
   957  019D  01FD               	clrf	divisor@i+1
   958  019E                     i1l1345:
   959                           
   960                           ;LAB9.c: 156:         dig[i] = cont_vol % 10;
   961  019E  300A               	movlw	10
   962  019F  00F0               	movwf	___awmod@divisor
   963  01A0  3000               	movlw	0
   964  01A1  00F1               	movwf	___awmod@divisor+1
   965  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   966  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   967  01A4  0827               	movf	_cont_vol+1,w
   968  01A5  00F3               	movwf	___awmod@dividend+1
   969  01A6  0826               	movf	_cont_vol,w
   970  01A7  00F2               	movwf	___awmod@dividend
   971  01A8  120A  118A  2091  120A  118A  	fcall	___awmod
   972  01AD  087C               	movf	divisor@i,w
   973  01AE  00F9               	movwf	??_divisor
   974  01AF  0779               	addwf	??_divisor,w
   975  01B0  3E20               	addlw	(low (_dig| 0))& (0+255)
   976  01B1  0084               	movwf	4
   977  01B2  0870               	movf	?___awmod,w
   978  01B3  1383               	bcf	3,7	;select IRP bank0
   979  01B4  0080               	movwf	0
   980  01B5  0A84               	incf	4,f
   981  01B6  0871               	movf	?___awmod+1,w
   982  01B7  0080               	movwf	0
   983                           
   984                           ;LAB9.c: 157:         cont_vol = (cont_vol - dig[i])/10;
   985  01B8  300A               	movlw	10
   986  01B9  00F0               	movwf	___awdiv@divisor
   987  01BA  3000               	movlw	0
   988  01BB  00F1               	movwf	___awdiv@divisor+1
   989  01BC  087C               	movf	divisor@i,w
   990  01BD  00F9               	movwf	??_divisor
   991  01BE  0779               	addwf	??_divisor,w
   992  01BF  3E20               	addlw	(low (_dig| 0))& (0+255)
   993  01C0  0084               	movwf	4
   994  01C1  0800               	movf	0,w
   995  01C2  00FA               	movwf	??_divisor+1
   996  01C3  0A84               	incf	4,f
   997  01C4  0800               	movf	0,w
   998  01C5  00FB               	movwf	??_divisor+2
   999  01C6  087A               	movf	??_divisor+1,w
  1000  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1001  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1002  01C9  0226               	subwf	_cont_vol,w
  1003  01CA  00F2               	movwf	___awdiv@dividend
  1004  01CB  087B               	movf	??_divisor+2,w
  1005  01CC  1C03               	skipc
  1006  01CD  0A7B               	incf	??_divisor+2,w
  1007  01CE  0227               	subwf	_cont_vol+1,w
  1008  01CF  00F3               	movwf	___awdiv@dividend+1
  1009  01D0  120A  118A  202A  120A  118A  	fcall	___awdiv
  1010  01D5  0871               	movf	?___awdiv+1,w
  1011  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1012  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1013  01D8  00A7               	movwf	_cont_vol+1
  1014  01D9  0870               	movf	?___awdiv,w
  1015  01DA  00A6               	movwf	_cont_vol
  1016  01DB                     i1l1347:
  1017                           
  1018                           ;LAB9.c: 158:     }
  1019  01DB  3001               	movlw	1
  1020  01DC  07FC               	addwf	divisor@i,f
  1021  01DD  1803               	skipnc
  1022  01DE  0AFD               	incf	divisor@i+1,f
  1023  01DF  3000               	movlw	0
  1024  01E0  07FD               	addwf	divisor@i+1,f
  1025  01E1                     i1l1349:
  1026  01E1  087D               	movf	divisor@i+1,w
  1027  01E2  3A80               	xorlw	128
  1028  01E3  00FF               	movwf	btemp+1
  1029  01E4  3080               	movlw	128
  1030  01E5  027F               	subwf	btemp+1,w
  1031  01E6  1D03               	skipz
  1032  01E7  29EA               	goto	u48_25
  1033  01E8  3003               	movlw	3
  1034  01E9  027C               	subwf	divisor@i,w
  1035  01EA                     u48_25:
  1036  01EA  1C03               	skipc
  1037  01EB  29ED               	goto	u48_21
  1038  01EC  29EE               	goto	u48_20
  1039  01ED                     u48_21:
  1040  01ED  299E               	goto	i1l1345
  1041  01EE                     u48_20:
  1042  01EE                     i1l95:
  1043  01EE  0008               	return
  1044  01EF                     __end_of_divisor:
  1045                           
  1046                           	psect	text5
  1047  0091                     __ptext5:	
  1048 ;; *************** function ___awmod *****************
  1049 ;; Defined at:
  1050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  divisor         2    0[COMMON] int 
  1053 ;;  dividend        2    2[COMMON] int 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  sign            1    6[COMMON] unsigned char 
  1056 ;;  counter         1    5[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  2    0[COMMON] int 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         4       0       0       0       0
  1067 ;;      Locals:         2       0       0       0       0
  1068 ;;      Temps:          1       0       0       0       0
  1069 ;;      Totals:         7       0       0       0       0
  1070 ;;Total ram usage:        7 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_divisor
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function ___awmod
  1081  0091                     ___awmod:
  1082  0091                     i1l1301:	
  1083                           ;incstack = 0
  1084                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1085                           
  1086  0091  01F6               	clrf	___awmod@sign
  1087  0092                     i1l1303:
  1088  0092  1FF3               	btfss	___awmod@dividend+1,7
  1089  0093  2895               	goto	u39_21
  1090  0094  2896               	goto	u39_20
  1091  0095                     u39_21:
  1092  0095  289D               	goto	i1l1309
  1093  0096                     u39_20:
  1094  0096                     i1l1305:
  1095  0096  09F2               	comf	___awmod@dividend,f
  1096  0097  09F3               	comf	___awmod@dividend+1,f
  1097  0098  0AF2               	incf	___awmod@dividend,f
  1098  0099  1903               	skipnz
  1099  009A  0AF3               	incf	___awmod@dividend+1,f
  1100  009B                     i1l1307:
  1101  009B  01F6               	clrf	___awmod@sign
  1102  009C  0AF6               	incf	___awmod@sign,f
  1103  009D                     i1l1309:
  1104  009D  1FF1               	btfss	___awmod@divisor+1,7
  1105  009E  28A0               	goto	u40_21
  1106  009F  28A1               	goto	u40_20
  1107  00A0                     u40_21:
  1108  00A0  28A6               	goto	i1l1313
  1109  00A1                     u40_20:
  1110  00A1                     i1l1311:
  1111  00A1  09F0               	comf	___awmod@divisor,f
  1112  00A2  09F1               	comf	___awmod@divisor+1,f
  1113  00A3  0AF0               	incf	___awmod@divisor,f
  1114  00A4  1903               	skipnz
  1115  00A5  0AF1               	incf	___awmod@divisor+1,f
  1116  00A6                     i1l1313:
  1117  00A6  0870               	movf	___awmod@divisor,w
  1118  00A7  0471               	iorwf	___awmod@divisor+1,w
  1119  00A8  1903               	btfsc	3,2
  1120  00A9  28AB               	goto	u41_21
  1121  00AA  28AC               	goto	u41_20
  1122  00AB                     u41_21:
  1123  00AB  28DB               	goto	i1l1331
  1124  00AC                     u41_20:
  1125  00AC                     i1l1315:
  1126  00AC  01F5               	clrf	___awmod@counter
  1127  00AD  0AF5               	incf	___awmod@counter,f
  1128  00AE  28BA               	goto	i1l1321
  1129  00AF                     i1l1317:
  1130  00AF  3001               	movlw	1
  1131  00B0                     u42_25:
  1132  00B0  1003               	clrc
  1133  00B1  0DF0               	rlf	___awmod@divisor,f
  1134  00B2  0DF1               	rlf	___awmod@divisor+1,f
  1135  00B3  3EFF               	addlw	-1
  1136  00B4  1D03               	skipz
  1137  00B5  28B0               	goto	u42_25
  1138  00B6                     i1l1319:
  1139  00B6  3001               	movlw	1
  1140  00B7  00F4               	movwf	??___awmod
  1141  00B8  0874               	movf	??___awmod,w
  1142  00B9  07F5               	addwf	___awmod@counter,f
  1143  00BA                     i1l1321:
  1144  00BA  1FF1               	btfss	___awmod@divisor+1,7
  1145  00BB  28BD               	goto	u43_21
  1146  00BC  28BE               	goto	u43_20
  1147  00BD                     u43_21:
  1148  00BD  28AF               	goto	i1l1317
  1149  00BE                     u43_20:
  1150  00BE                     i1l1323:
  1151  00BE  0871               	movf	___awmod@divisor+1,w
  1152  00BF  0273               	subwf	___awmod@dividend+1,w
  1153  00C0  1D03               	skipz
  1154  00C1  28C4               	goto	u44_25
  1155  00C2  0870               	movf	___awmod@divisor,w
  1156  00C3  0272               	subwf	___awmod@dividend,w
  1157  00C4                     u44_25:
  1158  00C4  1C03               	skipc
  1159  00C5  28C7               	goto	u44_21
  1160  00C6  28C8               	goto	u44_20
  1161  00C7                     u44_21:
  1162  00C7  28CE               	goto	i1l1327
  1163  00C8                     u44_20:
  1164  00C8                     i1l1325:
  1165  00C8  0870               	movf	___awmod@divisor,w
  1166  00C9  02F2               	subwf	___awmod@dividend,f
  1167  00CA  0871               	movf	___awmod@divisor+1,w
  1168  00CB  1C03               	skipc
  1169  00CC  03F3               	decf	___awmod@dividend+1,f
  1170  00CD  02F3               	subwf	___awmod@dividend+1,f
  1171  00CE                     i1l1327:
  1172  00CE  3001               	movlw	1
  1173  00CF                     u45_25:
  1174  00CF  1003               	clrc
  1175  00D0  0CF1               	rrf	___awmod@divisor+1,f
  1176  00D1  0CF0               	rrf	___awmod@divisor,f
  1177  00D2  3EFF               	addlw	-1
  1178  00D3  1D03               	skipz
  1179  00D4  28CF               	goto	u45_25
  1180  00D5                     i1l1329:
  1181  00D5  3001               	movlw	1
  1182  00D6  02F5               	subwf	___awmod@counter,f
  1183  00D7  1D03               	btfss	3,2
  1184  00D8  28DA               	goto	u46_21
  1185  00D9  28DB               	goto	u46_20
  1186  00DA                     u46_21:
  1187  00DA  28BE               	goto	i1l1323
  1188  00DB                     u46_20:
  1189  00DB                     i1l1331:
  1190  00DB  0876               	movf	___awmod@sign,w
  1191  00DC  1903               	btfsc	3,2
  1192  00DD  28DF               	goto	u47_21
  1193  00DE  28E0               	goto	u47_20
  1194  00DF                     u47_21:
  1195  00DF  28E5               	goto	i1l1335
  1196  00E0                     u47_20:
  1197  00E0                     i1l1333:
  1198  00E0  09F2               	comf	___awmod@dividend,f
  1199  00E1  09F3               	comf	___awmod@dividend+1,f
  1200  00E2  0AF2               	incf	___awmod@dividend,f
  1201  00E3  1903               	skipnz
  1202  00E4  0AF3               	incf	___awmod@dividend+1,f
  1203  00E5                     i1l1335:
  1204  00E5  0873               	movf	___awmod@dividend+1,w
  1205  00E6  00F1               	movwf	?___awmod+1
  1206  00E7  0872               	movf	___awmod@dividend,w
  1207  00E8  00F0               	movwf	?___awmod
  1208  00E9                     i1l387:
  1209  00E9  0008               	return
  1210  00EA                     __end_of___awmod:
  1211                           
  1212                           	psect	text6
  1213  002A                     __ptext6:	
  1214 ;; *************** function ___awdiv *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    0[COMMON] int 
  1219 ;;  dividend        2    2[COMMON] int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  quotient        2    7[COMMON] int 
  1222 ;;  sign            1    6[COMMON] unsigned char 
  1223 ;;  counter         1    5[COMMON] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2    0[COMMON] int 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         4       0       0       0       0
  1234 ;;      Locals:         4       0       0       0       0
  1235 ;;      Temps:          1       0       0       0       0
  1236 ;;      Totals:         9       0       0       0       0
  1237 ;;Total ram usage:        9 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_divisor
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function ___awdiv
  1248  002A                     ___awdiv:
  1249  002A                     i1l1257:	
  1250                           ;incstack = 0
  1251                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1252                           
  1253  002A  01F6               	clrf	___awdiv@sign
  1254  002B                     i1l1259:
  1255  002B  1FF1               	btfss	___awdiv@divisor+1,7
  1256  002C  282E               	goto	u29_21
  1257  002D  282F               	goto	u29_20
  1258  002E                     u29_21:
  1259  002E  2836               	goto	i1l1265
  1260  002F                     u29_20:
  1261  002F                     i1l1261:
  1262  002F  09F0               	comf	___awdiv@divisor,f
  1263  0030  09F1               	comf	___awdiv@divisor+1,f
  1264  0031  0AF0               	incf	___awdiv@divisor,f
  1265  0032  1903               	skipnz
  1266  0033  0AF1               	incf	___awdiv@divisor+1,f
  1267  0034                     i1l1263:
  1268  0034  01F6               	clrf	___awdiv@sign
  1269  0035  0AF6               	incf	___awdiv@sign,f
  1270  0036                     i1l1265:
  1271  0036  1FF3               	btfss	___awdiv@dividend+1,7
  1272  0037  2839               	goto	u30_21
  1273  0038  283A               	goto	u30_20
  1274  0039                     u30_21:
  1275  0039  2843               	goto	i1l1271
  1276  003A                     u30_20:
  1277  003A                     i1l1267:
  1278  003A  09F2               	comf	___awdiv@dividend,f
  1279  003B  09F3               	comf	___awdiv@dividend+1,f
  1280  003C  0AF2               	incf	___awdiv@dividend,f
  1281  003D  1903               	skipnz
  1282  003E  0AF3               	incf	___awdiv@dividend+1,f
  1283  003F                     i1l1269:
  1284  003F  3001               	movlw	1
  1285  0040  00F4               	movwf	??___awdiv
  1286  0041  0874               	movf	??___awdiv,w
  1287  0042  06F6               	xorwf	___awdiv@sign,f
  1288  0043                     i1l1271:
  1289  0043  01F7               	clrf	___awdiv@quotient
  1290  0044  01F8               	clrf	___awdiv@quotient+1
  1291  0045                     i1l1273:
  1292  0045  0870               	movf	___awdiv@divisor,w
  1293  0046  0471               	iorwf	___awdiv@divisor+1,w
  1294  0047  1903               	btfsc	3,2
  1295  0048  284A               	goto	u31_21
  1296  0049  284B               	goto	u31_20
  1297  004A                     u31_21:
  1298  004A  2882               	goto	i1l1293
  1299  004B                     u31_20:
  1300  004B                     i1l1275:
  1301  004B  01F5               	clrf	___awdiv@counter
  1302  004C  0AF5               	incf	___awdiv@counter,f
  1303  004D  2859               	goto	i1l1281
  1304  004E                     i1l1277:
  1305  004E  3001               	movlw	1
  1306  004F                     u32_25:
  1307  004F  1003               	clrc
  1308  0050  0DF0               	rlf	___awdiv@divisor,f
  1309  0051  0DF1               	rlf	___awdiv@divisor+1,f
  1310  0052  3EFF               	addlw	-1
  1311  0053  1D03               	skipz
  1312  0054  284F               	goto	u32_25
  1313  0055                     i1l1279:
  1314  0055  3001               	movlw	1
  1315  0056  00F4               	movwf	??___awdiv
  1316  0057  0874               	movf	??___awdiv,w
  1317  0058  07F5               	addwf	___awdiv@counter,f
  1318  0059                     i1l1281:
  1319  0059  1FF1               	btfss	___awdiv@divisor+1,7
  1320  005A  285C               	goto	u33_21
  1321  005B  285D               	goto	u33_20
  1322  005C                     u33_21:
  1323  005C  284E               	goto	i1l1277
  1324  005D                     u33_20:
  1325  005D                     i1l1283:
  1326  005D  3001               	movlw	1
  1327  005E                     u34_25:
  1328  005E  1003               	clrc
  1329  005F  0DF7               	rlf	___awdiv@quotient,f
  1330  0060  0DF8               	rlf	___awdiv@quotient+1,f
  1331  0061  3EFF               	addlw	-1
  1332  0062  1D03               	skipz
  1333  0063  285E               	goto	u34_25
  1334  0064  0871               	movf	___awdiv@divisor+1,w
  1335  0065  0273               	subwf	___awdiv@dividend+1,w
  1336  0066  1D03               	skipz
  1337  0067  286A               	goto	u35_25
  1338  0068  0870               	movf	___awdiv@divisor,w
  1339  0069  0272               	subwf	___awdiv@dividend,w
  1340  006A                     u35_25:
  1341  006A  1C03               	skipc
  1342  006B  286D               	goto	u35_21
  1343  006C  286E               	goto	u35_20
  1344  006D                     u35_21:
  1345  006D  2875               	goto	i1l1289
  1346  006E                     u35_20:
  1347  006E                     i1l1285:
  1348  006E  0870               	movf	___awdiv@divisor,w
  1349  006F  02F2               	subwf	___awdiv@dividend,f
  1350  0070  0871               	movf	___awdiv@divisor+1,w
  1351  0071  1C03               	skipc
  1352  0072  03F3               	decf	___awdiv@dividend+1,f
  1353  0073  02F3               	subwf	___awdiv@dividend+1,f
  1354  0074                     i1l1287:
  1355  0074  1477               	bsf	___awdiv@quotient,0
  1356  0075                     i1l1289:
  1357  0075  3001               	movlw	1
  1358  0076                     u36_25:
  1359  0076  1003               	clrc
  1360  0077  0CF1               	rrf	___awdiv@divisor+1,f
  1361  0078  0CF0               	rrf	___awdiv@divisor,f
  1362  0079  3EFF               	addlw	-1
  1363  007A  1D03               	skipz
  1364  007B  2876               	goto	u36_25
  1365  007C                     i1l1291:
  1366  007C  3001               	movlw	1
  1367  007D  02F5               	subwf	___awdiv@counter,f
  1368  007E  1D03               	btfss	3,2
  1369  007F  2881               	goto	u37_21
  1370  0080  2882               	goto	u37_20
  1371  0081                     u37_21:
  1372  0081  285D               	goto	i1l1283
  1373  0082                     u37_20:
  1374  0082                     i1l1293:
  1375  0082  0876               	movf	___awdiv@sign,w
  1376  0083  1903               	btfsc	3,2
  1377  0084  2886               	goto	u38_21
  1378  0085  2887               	goto	u38_20
  1379  0086                     u38_21:
  1380  0086  288C               	goto	i1l1297
  1381  0087                     u38_20:
  1382  0087                     i1l1295:
  1383  0087  09F7               	comf	___awdiv@quotient,f
  1384  0088  09F8               	comf	___awdiv@quotient+1,f
  1385  0089  0AF7               	incf	___awdiv@quotient,f
  1386  008A  1903               	skipnz
  1387  008B  0AF8               	incf	___awdiv@quotient+1,f
  1388  008C                     i1l1297:
  1389  008C  0878               	movf	___awdiv@quotient+1,w
  1390  008D  00F1               	movwf	?___awdiv+1
  1391  008E  0877               	movf	___awdiv@quotient,w
  1392  008F  00F0               	movwf	?___awdiv
  1393  0090                     i1l374:
  1394  0090  0008               	return
  1395  0091                     __end_of___awdiv:
  1396                           
  1397                           	psect	text7
  1398  01EF                     __ptext7:	
  1399 ;; *************** function _displays *****************
  1400 ;; Defined at:
  1401 ;;		line 161 in file "LAB9.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          1       0       0       0       0
  1418 ;;      Totals:         1       0       0       0       0
  1419 ;;Total ram usage:        1 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 1
  1422 ;; This function calls:
  1423 ;;		_tabla
  1424 ;;		_tabla_p
  1425 ;; This function is called by:
  1426 ;;		_isr
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _displays
  1432  01EF                     _displays:
  1433  01EF                     i1l1357:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1436                           
  1437                           
  1438                           ;LAB9.c: 162:     PORTE = disp_selector;
  1439  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1440  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1441  01F1  0833               	movf	_disp_selector,w
  1442  01F2  0089               	movwf	9	;volatile
  1443  01F3                     i1l1359:
  1444                           
  1445                           ;LAB9.c: 163:     if(disp_selector == 0b001){
  1446  01F3  0333               	decf	_disp_selector,w
  1447  01F4  1D03               	btfss	3,2
  1448  01F5  29F7               	goto	u49_21
  1449  01F6  29F8               	goto	u49_20
  1450  01F7                     u49_21:
  1451  01F7  2A0A               	goto	i1l1365
  1452  01F8                     u49_20:
  1453  01F8                     i1l1361:
  1454                           
  1455                           ;LAB9.c: 164:         PORTD = tabla(dig[0]);
  1456  01F8  0821               	movf	_dig+1,w
  1457  01F9  00F1               	movwf	tabla@a+1
  1458  01FA  0820               	movf	_dig,w
  1459  01FB  00F0               	movwf	tabla@a
  1460  01FC  120A  118A  2143  120A  118A  	fcall	_tabla
  1461  0201  0870               	movf	?_tabla,w
  1462  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0204  0088               	movwf	8	;volatile
  1465  0205                     i1l1363:
  1466                           
  1467                           ;LAB9.c: 165:         disp_selector = 0b010;
  1468  0205  3002               	movlw	2
  1469  0206  00F2               	movwf	??_displays
  1470  0207  0872               	movf	??_displays,w
  1471  0208  00B3               	movwf	_disp_selector
  1472                           
  1473                           ;LAB9.c: 166:     }
  1474  0209  2A37               	goto	i1l103
  1475  020A                     i1l1365:
  1476  020A  3002               	movlw	2
  1477  020B  0633               	xorwf	_disp_selector,w
  1478  020C  1D03               	btfss	3,2
  1479  020D  2A0F               	goto	u50_21
  1480  020E  2A10               	goto	u50_20
  1481  020F                     u50_21:
  1482  020F  2A22               	goto	i1l1371
  1483  0210                     u50_20:
  1484  0210                     i1l1367:
  1485                           
  1486                           ;LAB9.c: 168:         PORTD = tabla(dig[1]);
  1487  0210  0823               	movf	_dig+3,w
  1488  0211  00F1               	movwf	tabla@a+1
  1489  0212  0822               	movf	_dig+2,w
  1490  0213  00F0               	movwf	tabla@a
  1491  0214  120A  118A  2143  120A  118A  	fcall	_tabla
  1492  0219  0870               	movf	?_tabla,w
  1493  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1494  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1495  021C  0088               	movwf	8	;volatile
  1496  021D                     i1l1369:
  1497                           
  1498                           ;LAB9.c: 169:         disp_selector = 0b100;
  1499  021D  3004               	movlw	4
  1500  021E  00F2               	movwf	??_displays
  1501  021F  0872               	movf	??_displays,w
  1502  0220  00B3               	movwf	_disp_selector
  1503                           
  1504                           ;LAB9.c: 170:     }
  1505  0221  2A37               	goto	i1l103
  1506  0222                     i1l1371:
  1507  0222  3004               	movlw	4
  1508  0223  0633               	xorwf	_disp_selector,w
  1509  0224  1D03               	btfss	3,2
  1510  0225  2A27               	goto	u51_21
  1511  0226  2A28               	goto	u51_20
  1512  0227                     u51_21:
  1513  0227  2A37               	goto	i1l103
  1514  0228                     u51_20:
  1515  0228                     i1l1373:
  1516                           
  1517                           ;LAB9.c: 172:         PORTD = tabla_p(dig[2]);
  1518  0228  0825               	movf	_dig+5,w
  1519  0229  00F1               	movwf	tabla_p@a+1
  1520  022A  0824               	movf	_dig+4,w
  1521  022B  00F0               	movwf	tabla_p@a
  1522  022C  120A  118A  20EA  120A  118A  	fcall	_tabla_p
  1523  0231  0870               	movf	?_tabla_p,w
  1524  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0234  0088               	movwf	8	;volatile
  1527  0235                     i1l1375:
  1528                           
  1529                           ;LAB9.c: 173:         disp_selector = 0b001;
  1530  0235  01B3               	clrf	_disp_selector
  1531  0236  0AB3               	incf	_disp_selector,f
  1532  0237                     i1l103:
  1533  0237  0008               	return
  1534  0238                     __end_of_displays:
  1535                           
  1536                           	psect	text8
  1537  00EA                     __ptext8:	
  1538 ;; *************** function _tabla_p *****************
  1539 ;; Defined at:
  1540 ;;		line 215 in file "LAB9.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  a               2    0[COMMON] int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    0[COMMON] int 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         2       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         2       0       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_displays
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _tabla_p
  1569  00EA                     _tabla_p:
  1570  00EA                     i1l1187:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _tabla_p: [wreg-fsr0h+status,2+status,0]
  1573                           
  1574                           
  1575                           ;LAB9.c: 216:     switch (a){
  1576  00EA  291D               	goto	i1l1251
  1577  00EB                     i1l1189:
  1578                           
  1579                           ;LAB9.c: 218:             return 0b10111111;
  1580  00EB  30BF               	movlw	191
  1581  00EC  00F0               	movwf	?_tabla_p
  1582  00ED  3000               	movlw	0
  1583  00EE  00F1               	movwf	?_tabla_p+1
  1584  00EF  2942               	goto	i1l124
  1585  00F0                     i1l1195:
  1586                           
  1587                           ;LAB9.c: 221:             return 0b10000110;
  1588  00F0  3086               	movlw	134
  1589  00F1  00F0               	movwf	?_tabla_p
  1590  00F2  3000               	movlw	0
  1591  00F3  00F1               	movwf	?_tabla_p+1
  1592  00F4  2942               	goto	i1l124
  1593  00F5                     i1l1201:
  1594                           
  1595                           ;LAB9.c: 224:             return 0b11011011;
  1596  00F5  30DB               	movlw	219
  1597  00F6  00F0               	movwf	?_tabla_p
  1598  00F7  3000               	movlw	0
  1599  00F8  00F1               	movwf	?_tabla_p+1
  1600  00F9  2942               	goto	i1l124
  1601  00FA                     i1l1207:
  1602                           
  1603                           ;LAB9.c: 227:             return 0b11001111;
  1604  00FA  30CF               	movlw	207
  1605  00FB  00F0               	movwf	?_tabla_p
  1606  00FC  3000               	movlw	0
  1607  00FD  00F1               	movwf	?_tabla_p+1
  1608  00FE  2942               	goto	i1l124
  1609  00FF                     i1l1213:
  1610                           
  1611                           ;LAB9.c: 230:             return 0b11100110;
  1612  00FF  30E6               	movlw	230
  1613  0100  00F0               	movwf	?_tabla_p
  1614  0101  3000               	movlw	0
  1615  0102  00F1               	movwf	?_tabla_p+1
  1616  0103  2942               	goto	i1l124
  1617  0104                     i1l1219:
  1618                           
  1619                           ;LAB9.c: 233:             return 0b11101101;
  1620  0104  30ED               	movlw	237
  1621  0105  00F0               	movwf	?_tabla_p
  1622  0106  3000               	movlw	0
  1623  0107  00F1               	movwf	?_tabla_p+1
  1624  0108  2942               	goto	i1l124
  1625  0109                     i1l1225:
  1626                           
  1627                           ;LAB9.c: 236:             return 0b11111101;
  1628  0109  30FD               	movlw	253
  1629  010A  00F0               	movwf	?_tabla_p
  1630  010B  3000               	movlw	0
  1631  010C  00F1               	movwf	?_tabla_p+1
  1632  010D  2942               	goto	i1l124
  1633  010E                     i1l1231:
  1634                           
  1635                           ;LAB9.c: 239:             return 0b10000111;
  1636  010E  3087               	movlw	135
  1637  010F  00F0               	movwf	?_tabla_p
  1638  0110  3000               	movlw	0
  1639  0111  00F1               	movwf	?_tabla_p+1
  1640  0112  2942               	goto	i1l124
  1641  0113                     i1l1237:
  1642                           
  1643                           ;LAB9.c: 242:             return 0b11111111;
  1644  0113  30FF               	movlw	255
  1645  0114  00F0               	movwf	?_tabla_p
  1646  0115  3000               	movlw	0
  1647  0116  00F1               	movwf	?_tabla_p+1
  1648  0117  2942               	goto	i1l124
  1649  0118                     i1l1243:
  1650                           
  1651                           ;LAB9.c: 245:             return 0b11101111;
  1652  0118  30EF               	movlw	239
  1653  0119  00F0               	movwf	?_tabla_p
  1654  011A  3000               	movlw	0
  1655  011B  00F1               	movwf	?_tabla_p+1
  1656  011C  2942               	goto	i1l124
  1657  011D                     i1l1251:
  1658                           
  1659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1660                           ; Switch size 1, requested type "simple"
  1661                           ; Number of cases is 1, Range of values is 0 to 0
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte            4     3 (average)
  1665                           ; direct_byte           11     8 (fixed)
  1666                           ; jumptable            260     6 (fixed)
  1667                           ;	Chosen strategy is simple_byte
  1668  011D  0871               	movf	tabla_p@a+1,w
  1669  011E  3A00               	xorlw	0	; case 0
  1670  011F  1903               	skipnz
  1671  0120  2922               	goto	i1l1507
  1672  0121  2942               	goto	i1l124
  1673  0122                     i1l1507:
  1674                           
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 10, Range of values is 0 to 9
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte           31    16 (average)
  1680                           ; direct_byte           38     8 (fixed)
  1681                           ; jumptable            260     6 (fixed)
  1682                           ;	Chosen strategy is simple_byte
  1683  0122  0870               	movf	tabla_p@a,w
  1684  0123  3A00               	xorlw	0	; case 0
  1685  0124  1903               	skipnz
  1686  0125  28EB               	goto	i1l1189
  1687  0126  3A01               	xorlw	1	; case 1
  1688  0127  1903               	skipnz
  1689  0128  28F0               	goto	i1l1195
  1690  0129  3A03               	xorlw	3	; case 2
  1691  012A  1903               	skipnz
  1692  012B  28F5               	goto	i1l1201
  1693  012C  3A01               	xorlw	1	; case 3
  1694  012D  1903               	skipnz
  1695  012E  28FA               	goto	i1l1207
  1696  012F  3A07               	xorlw	7	; case 4
  1697  0130  1903               	skipnz
  1698  0131  28FF               	goto	i1l1213
  1699  0132  3A01               	xorlw	1	; case 5
  1700  0133  1903               	skipnz
  1701  0134  2904               	goto	i1l1219
  1702  0135  3A03               	xorlw	3	; case 6
  1703  0136  1903               	skipnz
  1704  0137  2909               	goto	i1l1225
  1705  0138  3A01               	xorlw	1	; case 7
  1706  0139  1903               	skipnz
  1707  013A  290E               	goto	i1l1231
  1708  013B  3A0F               	xorlw	15	; case 8
  1709  013C  1903               	skipnz
  1710  013D  2913               	goto	i1l1237
  1711  013E  3A01               	xorlw	1	; case 9
  1712  013F  1903               	skipnz
  1713  0140  2918               	goto	i1l1243
  1714  0141  2942               	goto	i1l124
  1715  0142                     i1l124:
  1716  0142  0008               	return
  1717  0143                     __end_of_tabla_p:
  1718                           
  1719                           	psect	text9
  1720  0143                     __ptext9:	
  1721 ;; *************** function _tabla *****************
  1722 ;; Defined at:
  1723 ;;		line 177 in file "LAB9.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               2    0[COMMON] int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    0[COMMON] int 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         2       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0
  1740 ;;      Totals:         2       0       0       0       0
  1741 ;;Total ram usage:        2 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_displays
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _tabla
  1752  0143                     _tabla:
  1753  0143                     i1l1117:	
  1754                           ;incstack = 0
  1755                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1756                           
  1757                           
  1758                           ;LAB9.c: 178:     switch (a){
  1759  0143  2976               	goto	i1l1181
  1760  0144                     i1l1119:
  1761                           
  1762                           ;LAB9.c: 180:             return 0b00111111;
  1763  0144  303F               	movlw	63
  1764  0145  00F0               	movwf	?_tabla
  1765  0146  3000               	movlw	0
  1766  0147  00F1               	movwf	?_tabla+1
  1767  0148  299B               	goto	i1l108
  1768  0149                     i1l1125:
  1769                           
  1770                           ;LAB9.c: 183:             return 0b00000110;
  1771  0149  3006               	movlw	6
  1772  014A  00F0               	movwf	?_tabla
  1773  014B  3000               	movlw	0
  1774  014C  00F1               	movwf	?_tabla+1
  1775  014D  299B               	goto	i1l108
  1776  014E                     i1l1131:
  1777                           
  1778                           ;LAB9.c: 186:             return 0b01011011;
  1779  014E  305B               	movlw	91
  1780  014F  00F0               	movwf	?_tabla
  1781  0150  3000               	movlw	0
  1782  0151  00F1               	movwf	?_tabla+1
  1783  0152  299B               	goto	i1l108
  1784  0153                     i1l1137:
  1785                           
  1786                           ;LAB9.c: 189:             return 0b01001111;
  1787  0153  304F               	movlw	79
  1788  0154  00F0               	movwf	?_tabla
  1789  0155  3000               	movlw	0
  1790  0156  00F1               	movwf	?_tabla+1
  1791  0157  299B               	goto	i1l108
  1792  0158                     i1l1143:
  1793                           
  1794                           ;LAB9.c: 192:             return 0b01100110;
  1795  0158  3066               	movlw	102
  1796  0159  00F0               	movwf	?_tabla
  1797  015A  3000               	movlw	0
  1798  015B  00F1               	movwf	?_tabla+1
  1799  015C  299B               	goto	i1l108
  1800  015D                     i1l1149:
  1801                           
  1802                           ;LAB9.c: 195:             return 0b01101101;
  1803  015D  306D               	movlw	109
  1804  015E  00F0               	movwf	?_tabla
  1805  015F  3000               	movlw	0
  1806  0160  00F1               	movwf	?_tabla+1
  1807  0161  299B               	goto	i1l108
  1808  0162                     i1l1155:
  1809                           
  1810                           ;LAB9.c: 198:             return 0b01111101;
  1811  0162  307D               	movlw	125
  1812  0163  00F0               	movwf	?_tabla
  1813  0164  3000               	movlw	0
  1814  0165  00F1               	movwf	?_tabla+1
  1815  0166  299B               	goto	i1l108
  1816  0167                     i1l1161:
  1817                           
  1818                           ;LAB9.c: 201:             return 0b00000111;
  1819  0167  3007               	movlw	7
  1820  0168  00F0               	movwf	?_tabla
  1821  0169  3000               	movlw	0
  1822  016A  00F1               	movwf	?_tabla+1
  1823  016B  299B               	goto	i1l108
  1824  016C                     i1l1167:
  1825                           
  1826                           ;LAB9.c: 204:             return 0b01111111;
  1827  016C  307F               	movlw	127
  1828  016D  00F0               	movwf	?_tabla
  1829  016E  3000               	movlw	0
  1830  016F  00F1               	movwf	?_tabla+1
  1831  0170  299B               	goto	i1l108
  1832  0171                     i1l1173:
  1833                           
  1834                           ;LAB9.c: 207:             return 0b01101111;
  1835  0171  306F               	movlw	111
  1836  0172  00F0               	movwf	?_tabla
  1837  0173  3000               	movlw	0
  1838  0174  00F1               	movwf	?_tabla+1
  1839  0175  299B               	goto	i1l108
  1840  0176                     i1l1181:
  1841                           
  1842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1843                           ; Switch size 1, requested type "simple"
  1844                           ; Number of cases is 1, Range of values is 0 to 0
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte            4     3 (average)
  1848                           ; direct_byte           11     8 (fixed)
  1849                           ; jumptable            260     6 (fixed)
  1850                           ;	Chosen strategy is simple_byte
  1851  0176  0871               	movf	tabla@a+1,w
  1852  0177  3A00               	xorlw	0	; case 0
  1853  0178  1903               	skipnz
  1854  0179  297B               	goto	i1l1509
  1855  017A  299B               	goto	i1l108
  1856  017B                     i1l1509:
  1857                           
  1858                           ; Switch size 1, requested type "simple"
  1859                           ; Number of cases is 10, Range of values is 0 to 9
  1860                           ; switch strategies available:
  1861                           ; Name         Instructions Cycles
  1862                           ; simple_byte           31    16 (average)
  1863                           ; direct_byte           38     8 (fixed)
  1864                           ; jumptable            260     6 (fixed)
  1865                           ;	Chosen strategy is simple_byte
  1866  017B  0870               	movf	tabla@a,w
  1867  017C  3A00               	xorlw	0	; case 0
  1868  017D  1903               	skipnz
  1869  017E  2944               	goto	i1l1119
  1870  017F  3A01               	xorlw	1	; case 1
  1871  0180  1903               	skipnz
  1872  0181  2949               	goto	i1l1125
  1873  0182  3A03               	xorlw	3	; case 2
  1874  0183  1903               	skipnz
  1875  0184  294E               	goto	i1l1131
  1876  0185  3A01               	xorlw	1	; case 3
  1877  0186  1903               	skipnz
  1878  0187  2953               	goto	i1l1137
  1879  0188  3A07               	xorlw	7	; case 4
  1880  0189  1903               	skipnz
  1881  018A  2958               	goto	i1l1143
  1882  018B  3A01               	xorlw	1	; case 5
  1883  018C  1903               	skipnz
  1884  018D  295D               	goto	i1l1149
  1885  018E  3A03               	xorlw	3	; case 6
  1886  018F  1903               	skipnz
  1887  0190  2962               	goto	i1l1155
  1888  0191  3A01               	xorlw	1	; case 7
  1889  0192  1903               	skipnz
  1890  0193  2967               	goto	i1l1161
  1891  0194  3A0F               	xorlw	15	; case 8
  1892  0195  1903               	skipnz
  1893  0196  296C               	goto	i1l1167
  1894  0197  3A01               	xorlw	1	; case 9
  1895  0198  1903               	skipnz
  1896  0199  2971               	goto	i1l1173
  1897  019A  299B               	goto	i1l108
  1898  019B                     i1l108:
  1899  019B  0008               	return
  1900  019C                     __end_of_tabla:
  1901  007E                     btemp	set	126	;btemp
  1902  007E                     wtemp0	set	126
  1903                           
  1904                           	psect	config
  1905                           
  1906                           ;Config register CONFIG1 @ 0x2007
  1907                           ;	Oscillator Selection bits
  1908                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1909                           ;	Watchdog Timer Enable bit
  1910                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1911                           ;	Power-up Timer Enable bit
  1912                           ;	PWRTE = OFF, PWRT disabled
  1913                           ;	RE3/MCLR pin function select bit
  1914                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1915                           ;	Code Protection bit
  1916                           ;	CP = OFF, Program memory code protection is disabled
  1917                           ;	Data Code Protection bit
  1918                           ;	CPD = OFF, Data memory code protection is disabled
  1919                           ;	Brown Out Reset Selection bits
  1920                           ;	BOREN = OFF, BOR disabled
  1921                           ;	Internal External Switchover bit
  1922                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1923                           ;	Fail-Safe Clock Monitor Enabled bit
  1924                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1925                           ;	Low Voltage Programming Enable bit
  1926                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1927                           ;	In-Circuit Debugger Mode bit
  1928                           ;	DEBUG = 0x1, unprogrammed default
  1929  2007                     	org	8199
  1930  2007  20D4               	dw	8404
  1931                           
  1932                           ;Config register CONFIG2 @ 0x2008
  1933                           ;	Brown-out Reset Selection bit
  1934                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1935                           ;	Flash Program Memory Self Write Enable bits
  1936                           ;	WRT = OFF, Write protection off
  1937  2008                     	org	8200
  1938  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_divisor
    _divisor->___awdiv
    _displays->_tabla
    _displays->_tabla_p

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1262
                                              0 BANK0      6     6      0
                           _displays
                            _divisor
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _divisor                                              5     5      0     990
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     272
                                              2 COMMON     1     1      0
                              _tabla
                            _tabla_p
 ---------------------------------------------------------------------------------
 (4) _tabla_p                                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
     _tabla_p
   _divisor
     ___awdiv
     ___awmod
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 19:26:01 2021

                     l87 027A             ___awdiv@sign 0076                      u550 02C4  
                    u551 02C3                      u560 02CD                      u561 02CC  
                    u577 02D3                      u587 02E0                      u597 026D  
                    _dig 0020                      _isr 027B                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076                     l1401 025B  
                   l1411 0268                     l1403 025E                     l1421 0273  
                   l1413 0269                     l1405 025F                     l1423 0276  
                   l1415 0270                     l1407 0260                     l1425 0279  
                   l1417 0271                     l1409 0266                     l1419 0272  
                   l1451 02C0                     l1381 023D                     l1453 02C4  
                   l1391 0253                     l1383 024A                     l1463 02DC  
                   l1455 02CD                     l1447 02B8                     l1393 0254  
                   l1385 0250                     l1377 0238                     l1465 02E3  
                   l1457 02CF                     l1449 02BD                     l1395 0255  
                   l1387 0251                     l1379 023C                     l1459 02D7  
                   l1397 0256                     l1389 0252                     l1399 0257  
                   ?_isr 0070                     _T0IF 005A                     i1l73 02AB  
                   i1l90 02EF                     i1l95 01EE                     _TMR0 0001  
                   _digi 002A                     _main 02B8                     _tmr0 02EA  
                   btemp 007E                     start 0012                    ??_isr 002B  
                  ?_main 0070          __end_of___awdiv 0091                    ?_tmr0 0070  
        __end_of___awmod 00EA                    _ANSEL 0188          ___awdiv@divisor 0070  
                  i1l103 0237                    i1l108 019B                    i1l124 0142  
                  i1l374 0090                    i1l387 00E9          ___awdiv@counter 0075  
                  u30_20 003A                    u30_21 0039                    u31_20 004B  
                  u31_21 004A                    u40_20 00A1                    u40_21 00A0  
                  u32_25 004F                    u33_20 005D                    u41_20 00AC  
                  u33_21 005C                    u41_21 00AB                    u50_20 0210  
                  u50_21 020F                    u34_25 005E                    u42_25 00B0  
                  u51_20 0228                    u35_20 006E                    u43_20 00BE  
                  u51_21 0227                    u35_21 006D                    u43_21 00BD  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  u35_25 006A                    _PORTE 0009                    u44_20 00C8  
                  u52_20 027F                    u44_21 00C7                    u52_21 027E  
                  u36_25 0076                    u44_25 00C4                    u37_20 0082  
                  u29_20 002F                    u53_20 0288                    u37_21 0081  
                  u29_21 002E                    u53_21 0287                    u45_25 00CF  
                  u38_20 0087                    u46_20 00DB                    u54_20 02A1  
                  u38_21 0086                    u46_21 00DA                    u54_21 02A0  
                  u47_20 00E0                    u39_20 0096                    u47_21 00DF  
                  u39_21 0095                    u48_20 01EE                    u48_21 01ED  
                  u48_25 01EA                    u49_20 01F8                    u49_21 01F7  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089          __end_of_divisor 01EF                    _cont2 0028  
                  _tabla 0143          __end_of_tabla_p 0143                    _setup 0238  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 02EA             __end_of_tmr0 02F0  
                 ??_main 0032                   ??_tmr0 0070                   ?_tabla 0070  
                 _ADRESH 001E         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   i1l1201 00F5                   i1l1131 014E  
                 i1l1125 0149                   i1l1117 0143                   i1l1213 00FF  
                 i1l1301 0091                   i1l1143 0158                   i1l1119 0144  
                 i1l1231 010E                   i1l1207 00FA                   i1l1311 00A1  
                 i1l1303 0092                   i1l1161 0167                   i1l1137 0153  
                 i1l1225 0109                   i1l1321 00BA                   i1l1313 00A6  
                 i1l1305 0096                   i1l1155 0162                   i1l1243 0118  
                 i1l1219 0104                   i1l1251 011D                   i1l1323 00BE  
                 i1l1315 00AC                   i1l1331 00DB                   i1l1307 009B  
                 i1l1173 0171                   i1l1149 015D                   i1l1181 0176  
                 i1l1237 0113                   i1l1261 002F                   i1l1333 00E0  
                 i1l1325 00C8                   i1l1317 00AF                   i1l1309 009D  
                 i1l1167 016C                   i1l1271 0043                   i1l1263 0034  
                 i1l1335 00E5                   i1l1327 00CE                   i1l1319 00B6  
                 i1l1351 02EA                   i1l1431 027F                   i1l1361 01F8  
                 i1l1281 0059                   i1l1273 0045                   i1l1265 0036  
                 i1l1257 002A                   i1l1329 00D5                   i1l1345 019E  
                 i1l1353 02EB                   i1l1433 0288                   i1l1441 029D  
                 i1l1507 0122                   i1l1195 00F0                   i1l1187 00EA  
                 i1l1371 0222                   i1l1363 0205                   i1l1291 007C  
                 i1l1283 005D                   i1l1275 004B                   i1l1267 003A  
                 i1l1259 002B                   i1l1347 01DB                   i1l1339 019C  
                 i1l1443 02A1                   i1l1435 0292                   i1l1509 017B  
                 i1l1189 00EB                   i1l1373 0228                   i1l1365 020A  
                 i1l1357 01EF                   i1l1285 006E                   i1l1277 004E  
                 i1l1293 0082                   i1l1269 003F                   i1l1349 01E1  
                 i1l1445 02A6                   i1l1437 0298                   i1l1429 027B  
                 i1l1375 0235                   i1l1367 0210                   i1l1359 01F3  
                 i1l1295 0087                   i1l1287 0074                   i1l1279 0055  
                 i1l1439 029A                   i1l1369 021D                   i1l1297 008C  
                 i1l1289 0075         __end_of_displays 0238                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_divisor 0079                   tabla@a 0070  
              ??_tabla_p 0072                   saved_w 007E  __end_of__initialization 0026  
         __pcstackCOMMON 0070             __pidataBANK0 02F0            __end_of_tabla 019C  
          __end_of_setup 027B           _OPTION_REGbits 0081                  ??_tabla 0072  
                ??_setup 0031               __pbssBANK0 0020               __pmaintext 02B8  
             __pintentry 0004                ?_displays 0070                  ___awdiv 002A  
                ___awmod 0091                  __ptext1 0238                  __ptext2 027B  
                __ptext3 02EA                  __ptext4 019C                  __ptext5 0091  
                __ptext6 002A                  __ptext7 01EF                  __ptext8 00EA  
                __ptext9 0143                  _divisor 019C             __size_of_isr 003D  
                _tabla_p 00EA         ___awmod@dividend 0072               ??_displays 0072  
   end_of_initialization 0026      start_initialization 0015              __end_of_isr 02B8  
            __pdataBANK0 0033                ___latbits 0002            __pcstackBANK0 002B  
      __size_of_displays 0049                 ?___awdiv 0070                 ?___awmod 0070  
               ?_divisor 0070                 ?_tabla_p 0070           __size_of_tabla 0059  
         __size_of_setup 0043        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of_divisor 0053  
       __size_of_tabla_p 0059                 _displays 01EF                 _cont_vol 0026  
          __size_of_main 0032            __size_of_tmr0 0006                 divisor@i 007C  
             _INTCONbits 000B                 tabla_p@a 0070                 intlevel1 0000  
             _OSCCONbits 008F            _disp_selector 0033  
