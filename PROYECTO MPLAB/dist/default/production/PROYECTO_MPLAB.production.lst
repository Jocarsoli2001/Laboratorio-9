

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 21:14:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  01F2                     __pidataCOMMON:
   215                           
   216                           ;initializer for _disp_selector
   217  01F2  3401               	retlw	1
   218  0012                     _T2CONbits	set	18
   219  001D                     _CCP2CONbits	set	29
   220  0017                     _CCP1CONbits	set	23
   221  000B                     _INTCONbits	set	11
   222  0001                     _TMR0	set	1
   223  0009                     _PORTE	set	9
   224  0007                     _PORTC	set	7
   225  0008                     _PORTD	set	8
   226  0005                     _PORTA	set	5
   227  0015                     _CCPR1L	set	21
   228  001E                     _ADRESH	set	30
   229  001B                     _CCPR2L	set	27
   230  001F                     _ADCON0bits	set	31
   231  000C                     _PIR1bits	set	12
   232  005A                     _T0IF	set	90
   233  0092                     _PR2	set	146
   234  0087                     _TRISCbits	set	135
   235  008C                     _PIE1bits	set	140
   236  009F                     _ADCON1bits	set	159
   237  0081                     _OPTION_REGbits	set	129
   238  008F                     _OSCCONbits	set	143
   239  0089                     _TRISE	set	137
   240  0088                     _TRISD	set	136
   241  0087                     _TRISC	set	135
   242  0085                     _TRISA	set	133
   243  0189                     _ANSELH	set	393
   244  0188                     _ANSEL	set	392
   245                           
   246                           	psect	cinit
   247  0011                     start_initialization:	
   248                           ; #config settings
   249                           
   250  0011                     __initialization:
   251                           
   252                           ; Initialize objects allocated to COMMON
   253  0011  120A  118A  21F2  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   254  0016  00FC               	movwf	__pdataCOMMON& (0+127)
   255                           
   256                           ; Clear objects allocated to BANK0
   257  0017  01A0               	clrf	__pbssBANK0& (0+127)
   258  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   259  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   260  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   261  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   262  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   263                           
   264                           ; Clear objects allocated to COMMON
   265  001D  01F7               	clrf	__pbssCOMMON& (0+127)
   266  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   267  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   268  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   269  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   270  0022                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  0022                     __end_of__initialization:
   274  0022  0183               	clrf	3
   275  0023  120A  118A  29BB   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	bssCOMMON
   278  0077                     __pbssCOMMON:
   279  0077                     _cont_vol:
   280  0077                     	ds	2
   281  0079                     _cont2:
   282  0079                     	ds	2
   283  007B                     _digi:
   284  007B                     	ds	1
   285                           
   286                           	psect	dataCOMMON
   287  007C                     __pdataCOMMON:
   288  007C                     _disp_selector:
   289  007C                     	ds	1
   290                           
   291                           	psect	bssBANK0
   292  0020                     __pbssBANK0:
   293  0020                     _dig:
   294  0020                     	ds	6
   295                           
   296                           	psect	cstackCOMMON
   297  0070                     __pcstackCOMMON:
   298  0070                     ?_tmr0:
   299  0070                     ??_tmr0:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_displays:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_setup:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_isr:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_tabla:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_tabla_p:	
   318                           ; 2 bytes @ 0x0
   319                           
   320  0070                     tabla@a:	
   321                           ; 2 bytes @ 0x0
   322                           
   323  0070                     tabla_p@a:	
   324                           ; 2 bytes @ 0x0
   325                           
   326                           
   327                           ; 2 bytes @ 0x0
   328  0070                     	ds	2
   329  0072                     ??_displays:
   330  0072                     ??_tabla:	
   331                           ; 1 bytes @ 0x2
   332                           
   333  0072                     ??_tabla_p:	
   334                           ; 1 bytes @ 0x2
   335                           
   336                           
   337                           ; 1 bytes @ 0x2
   338  0072                     	ds	1
   339  0073                     ??_isr:
   340                           
   341                           ; 1 bytes @ 0x3
   342  0073                     	ds	4
   343                           
   344                           	psect	cstackBANK0
   345  0026                     __pcstackBANK0:
   346  0026                     ??_setup:
   347                           
   348                           ; 1 bytes @ 0x0
   349  0026                     	ds	1
   350  0027                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x1
   353  0027                     	ds	1
   354                           
   355                           	psect	maintext
   356  01BB                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 78 in file "LAB9.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       1       0       0       0
   379 ;;      Totals:         0       1       0       0       0
   380 ;;Total ram usage:        1 bytes
   381 ;; Hardware stack levels required when called: 4
   382 ;; This function calls:
   383 ;;		_setup
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _main
   391  01BB                     _main:
   392  01BB                     l1328:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;LAB9.c: 79:     setup();
   398  01BB  120A  118A  2026  120A  118A  	fcall	_setup
   399  01C0                     l1330:
   400                           
   401                           ;LAB9.c: 80:     ADCON0bits.GO = 1;
   402  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   403  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   404  01C2  149F               	bsf	31,1	;volatile
   405  01C3                     l1332:
   406                           
   407                           ;LAB9.c: 82:         if(ADCON0bits.GO == 0){
   408  01C3  189F               	btfsc	31,1	;volatile
   409  01C4  29C6               	goto	u181
   410  01C5  29C7               	goto	u180
   411  01C6                     u181:
   412  01C6  29C3               	goto	l1332
   413  01C7                     u180:
   414  01C7                     l1334:
   415                           
   416                           ;LAB9.c: 83:             if(ADCON0bits.CHS == 1){
   417  01C7  0C1F               	rrf	31,w	;volatile
   418  01C8  00A7               	movwf	??_main
   419  01C9  0C27               	rrf	??_main,w
   420  01CA  390F               	andlw	15
   421  01CB  3A01               	xorlw	1
   422  01CC  1D03               	skipz
   423  01CD  29CF               	goto	u191
   424  01CE  29D0               	goto	u190
   425  01CF                     u191:
   426  01CF  29D9               	goto	l1340
   427  01D0                     u190:
   428  01D0                     l1336:
   429                           
   430                           ;LAB9.c: 84:                 ADCON0bits.CHS = 0;
   431  01D0  30C3               	movlw	-61
   432  01D1  059F               	andwf	31,f	;volatile
   433  01D2                     l1338:
   434                           
   435                           ;LAB9.c: 85:                 _delay((unsigned long)((150)*(8000000/4000000.0)));
   436  01D2  3063               	movlw	99
   437  01D3  1283               	bcf	3,5	;RP0=0, select bank0
   438  01D4  1303               	bcf	3,6	;RP1=0, select bank0
   439  01D5  00A7               	movwf	??_main
   440  01D6                     u407:
   441  01D6  0BA7               	decfsz	??_main,f
   442  01D7  29D6               	goto	u407
   443                           
   444                           ;LAB9.c: 86:             }
   445  01D8  29DE               	goto	l1344
   446  01D9                     l1340:
   447                           
   448                           ;LAB9.c: 88:                 ADCON0bits.CHS = 1;
   449  01D9  081F               	movf	31,w	;volatile
   450  01DA  39C3               	andlw	-61
   451  01DB  3804               	iorlw	4
   452  01DC  009F               	movwf	31	;volatile
   453  01DD  29D2               	goto	l1338
   454  01DE                     l1344:
   455                           
   456                           ;LAB9.c: 91:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   457  01DE  3084               	movlw	132
   458  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   459  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   460  01E1  00A7               	movwf	??_main
   461  01E2                     u417:
   462  01E2  0BA7               	decfsz	??_main,f
   463  01E3  29E2               	goto	u417
   464  01E4  0000               	nop
   465  01E5                     l1346:
   466                           
   467                           ;LAB9.c: 92:             ADCON0bits.GO = 1;
   468  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   469  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   470  01E7  149F               	bsf	31,1	;volatile
   471  01E8  29C3               	goto	l1332
   472  01E9  120A  118A  280E   	ljmp	start
   473  01EC                     __end_of_main:
   474                           
   475                           	psect	text1
   476  0026                     __ptext1:	
   477 ;; *************** function _setup *****************
   478 ;; Defined at:
   479 ;;		line 98 in file "LAB9.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       1       0       0       0
   496 ;;      Totals:         0       1       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 3
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _setup
   509  0026                     _setup:
   510  0026                     l1234:	
   511                           ;incstack = 0
   512                           ; Regs used in _setup: [wreg+status,2+status,0]
   513                           
   514                           
   515                           ;LAB9.c: 101:     ANSEL = 0b00000111;
   516  0026  3007               	movlw	7
   517  0027  1683               	bsf	3,5	;RP0=1, select bank3
   518  0028  1703               	bsf	3,6	;RP1=1, select bank3
   519  0029  0088               	movwf	8	;volatile
   520  002A                     l1236:
   521                           
   522                           ;LAB9.c: 102:     ANSELH = 0;
   523  002A  0189               	clrf	9	;volatile
   524  002B                     l1238:
   525                           
   526                           ;LAB9.c: 104:     TRISA = 0b00000111;
   527  002B  3007               	movlw	7
   528  002C  1683               	bsf	3,5	;RP0=1, select bank1
   529  002D  1303               	bcf	3,6	;RP1=0, select bank1
   530  002E  0085               	movwf	5	;volatile
   531                           
   532                           ;LAB9.c: 105:     TRISC = 0;
   533  002F  0187               	clrf	7	;volatile
   534                           
   535                           ;LAB9.c: 106:     TRISD = 0;
   536  0030  0188               	clrf	8	;volatile
   537                           
   538                           ;LAB9.c: 107:     TRISE = 0;
   539  0031  0189               	clrf	9	;volatile
   540                           
   541                           ;LAB9.c: 109:     PORTA = 0;
   542  0032  1283               	bcf	3,5	;RP0=0, select bank0
   543  0033  1303               	bcf	3,6	;RP1=0, select bank0
   544  0034  0185               	clrf	5	;volatile
   545                           
   546                           ;LAB9.c: 110:     PORTD = 0;
   547  0035  0188               	clrf	8	;volatile
   548                           
   549                           ;LAB9.c: 111:     PORTC = 0;
   550  0036  0187               	clrf	7	;volatile
   551                           
   552                           ;LAB9.c: 112:     PORTE = 0;
   553  0037  0189               	clrf	9	;volatile
   554  0038                     l1240:
   555                           
   556                           ;LAB9.c: 115:     OSCCONbits.IRCF = 0b0111;
   557  0038  3070               	movlw	112
   558  0039  1683               	bsf	3,5	;RP0=1, select bank1
   559  003A  1303               	bcf	3,6	;RP1=0, select bank1
   560  003B  048F               	iorwf	15,f	;volatile
   561  003C                     l1242:
   562                           
   563                           ;LAB9.c: 116:     OSCCONbits.SCS = 1;
   564  003C  140F               	bsf	15,0	;volatile
   565  003D                     l1244:
   566                           
   567                           ;LAB9.c: 119:     OPTION_REGbits.T0CS = 0;
   568  003D  1281               	bcf	1,5	;volatile
   569  003E                     l1246:
   570                           
   571                           ;LAB9.c: 120:     OPTION_REGbits.T0SE = 0;
   572  003E  1201               	bcf	1,4	;volatile
   573  003F                     l1248:
   574                           
   575                           ;LAB9.c: 121:     OPTION_REGbits.PSA = 0;
   576  003F  1181               	bcf	1,3	;volatile
   577  0040                     l1250:
   578                           
   579                           ;LAB9.c: 122:     OPTION_REGbits.PS2 = 1;
   580  0040  1501               	bsf	1,2	;volatile
   581  0041                     l1252:
   582                           
   583                           ;LAB9.c: 123:     OPTION_REGbits.PS1 = 1;
   584  0041  1481               	bsf	1,1	;volatile
   585  0042                     l1254:
   586                           
   587                           ;LAB9.c: 124:     OPTION_REGbits.PS0 = 1;
   588  0042  1401               	bsf	1,0	;volatile
   589  0043                     l1256:
   590                           
   591                           ;LAB9.c: 125:     TMR0 = 237;
   592  0043  30ED               	movlw	237
   593  0044  1283               	bcf	3,5	;RP0=0, select bank0
   594  0045  1303               	bcf	3,6	;RP1=0, select bank0
   595  0046  0081               	movwf	1	;volatile
   596  0047                     l1258:
   597                           
   598                           ;LAB9.c: 128:     ADCON1bits.ADFM = 0;
   599  0047  1683               	bsf	3,5	;RP0=1, select bank1
   600  0048  1303               	bcf	3,6	;RP1=0, select bank1
   601  0049  139F               	bcf	31,7	;volatile
   602  004A                     l1260:
   603                           
   604                           ;LAB9.c: 129:     ADCON1bits.VCFG0 = 0;
   605  004A  121F               	bcf	31,4	;volatile
   606  004B                     l1262:
   607                           
   608                           ;LAB9.c: 130:     ADCON1bits.VCFG1 = 0;
   609  004B  129F               	bcf	31,5	;volatile
   610  004C                     l1264:
   611                           
   612                           ;LAB9.c: 132:     ADCON0bits.ADCS = 0b10;
   613  004C  1283               	bcf	3,5	;RP0=0, select bank0
   614  004D  1303               	bcf	3,6	;RP1=0, select bank0
   615  004E  081F               	movf	31,w	;volatile
   616  004F  393F               	andlw	-193
   617  0050  3880               	iorlw	128
   618  0051  009F               	movwf	31	;volatile
   619  0052                     l1266:
   620                           
   621                           ;LAB9.c: 133:     ADCON0bits.CHS = 0;
   622  0052  30C3               	movlw	-61
   623  0053  059F               	andwf	31,f	;volatile
   624  0054                     l1268:
   625                           
   626                           ;LAB9.c: 134:     ADCON0bits.ADON = 1;
   627  0054  141F               	bsf	31,0	;volatile
   628  0055                     l1270:
   629                           
   630                           ;LAB9.c: 135:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   631  0055  3020               	movlw	32
   632  0056  1283               	bcf	3,5	;RP0=0, select bank0
   633  0057  1303               	bcf	3,6	;RP1=0, select bank0
   634  0058  00A6               	movwf	??_setup
   635  0059                     u427:
   636  0059  0BA6               	decfsz	??_setup,f
   637  005A  2859               	goto	u427
   638  005B  0000               	nop
   639  005C                     l1272:
   640                           
   641                           ;LAB9.c: 138:     INTCONbits.T0IF = 0;
   642  005C  110B               	bcf	11,2	;volatile
   643  005D                     l1274:
   644                           
   645                           ;LAB9.c: 139:     INTCONbits.T0IE = 1;
   646  005D  168B               	bsf	11,5	;volatile
   647  005E                     l1276:
   648                           
   649                           ;LAB9.c: 140:     INTCONbits.GIE = 1;
   650  005E  178B               	bsf	11,7	;volatile
   651  005F                     l1278:
   652                           
   653                           ;LAB9.c: 141:     PIR1bits.ADIF = 0;
   654  005F  1283               	bcf	3,5	;RP0=0, select bank0
   655  0060  1303               	bcf	3,6	;RP1=0, select bank0
   656  0061  130C               	bcf	12,6	;volatile
   657  0062                     l1280:
   658                           
   659                           ;LAB9.c: 142:     PIE1bits.ADIE = 1;
   660  0062  1683               	bsf	3,5	;RP0=1, select bank1
   661  0063  1303               	bcf	3,6	;RP1=0, select bank1
   662  0064  170C               	bsf	12,6	;volatile
   663  0065                     l1282:
   664                           
   665                           ;LAB9.c: 143:     INTCONbits.PEIE = 1;
   666  0065  170B               	bsf	11,6	;volatile
   667  0066                     l1284:
   668                           
   669                           ;LAB9.c: 146:     TRISCbits.TRISC2 = 1;
   670  0066  1507               	bsf	7,2	;volatile
   671  0067                     l1286:
   672                           
   673                           ;LAB9.c: 147:     TRISCbits.TRISC1 = 1;
   674  0067  1487               	bsf	7,1	;volatile
   675  0068                     l1288:
   676                           
   677                           ;LAB9.c: 148:     PR2 = 255;
   678  0068  30FF               	movlw	255
   679  0069  0092               	movwf	18	;volatile
   680  006A                     l1290:
   681                           
   682                           ;LAB9.c: 149:     CCP1CONbits.P1M = 0;
   683  006A  303F               	movlw	-193
   684  006B  1283               	bcf	3,5	;RP0=0, select bank0
   685  006C  1303               	bcf	3,6	;RP1=0, select bank0
   686  006D  0597               	andwf	23,f	;volatile
   687  006E                     l1292:
   688                           
   689                           ;LAB9.c: 150:     CCP1CONbits.CCP1M = 0b1100;
   690  006E  0817               	movf	23,w	;volatile
   691  006F  39F0               	andlw	-16
   692  0070  380C               	iorlw	12
   693  0071  0097               	movwf	23	;volatile
   694  0072                     l1294:
   695                           
   696                           ;LAB9.c: 151:     CCP2CONbits.CCP2M = 0b1100;
   697  0072  081D               	movf	29,w	;volatile
   698  0073  39F0               	andlw	-16
   699  0074  380C               	iorlw	12
   700  0075  009D               	movwf	29	;volatile
   701  0076                     l1296:
   702                           
   703                           ;LAB9.c: 153:     CCPR1L = 0x0f;
   704  0076  300F               	movlw	15
   705  0077  0095               	movwf	21	;volatile
   706  0078                     l1298:
   707                           
   708                           ;LAB9.c: 154:     CCPR2L = 0x0f;
   709  0078  300F               	movlw	15
   710  0079  009B               	movwf	27	;volatile
   711  007A                     l1300:
   712                           
   713                           ;LAB9.c: 155:     CCP2CONbits.DC2B0 = 0;
   714  007A  121D               	bcf	29,4	;volatile
   715  007B                     l1302:
   716                           
   717                           ;LAB9.c: 156:     CCP2CONbits.DC2B1 = 0;
   718  007B  129D               	bcf	29,5	;volatile
   719  007C                     l1304:
   720                           
   721                           ;LAB9.c: 157:     CCP1CONbits.DC1B = 0;
   722  007C  30CF               	movlw	-49
   723  007D  0597               	andwf	23,f	;volatile
   724  007E                     l1306:
   725                           
   726                           ;LAB9.c: 160:     PIR1bits.TMR2IF = 0;
   727  007E  108C               	bcf	12,1	;volatile
   728  007F                     l1308:
   729                           
   730                           ;LAB9.c: 161:     T2CONbits.T2CKPS = 0b11;
   731  007F  3003               	movlw	3
   732  0080  0492               	iorwf	18,f	;volatile
   733  0081                     l1310:
   734                           
   735                           ;LAB9.c: 162:     T2CONbits.TMR2ON = 1;
   736  0081  1512               	bsf	18,2	;volatile
   737  0082                     l99:	
   738                           ;LAB9.c: 164:     while(PIR1bits.TMR2IF == 0);
   739                           
   740  0082  1C8C               	btfss	12,1	;volatile
   741  0083  2885               	goto	u141
   742  0084  2886               	goto	u140
   743  0085                     u141:
   744  0085  2882               	goto	l99
   745  0086                     u140:
   746  0086                     l101:
   747                           
   748                           ;LAB9.c: 165:     PIR1bits.TMR2IF = 0;
   749  0086  108C               	bcf	12,1	;volatile
   750                           
   751                           ;LAB9.c: 167:     TRISCbits.TRISC2 = 0;
   752  0087  1683               	bsf	3,5	;RP0=1, select bank1
   753  0088  1303               	bcf	3,6	;RP1=0, select bank1
   754  0089  1107               	bcf	7,2	;volatile
   755                           
   756                           ;LAB9.c: 168:     TRISCbits.TRISC1 = 0;
   757  008A  1087               	bcf	7,1	;volatile
   758  008B                     l102:	
   759                           ;LAB9.c: 170:     return;
   760                           
   761  008B  0008               	return
   762  008C                     __end_of_setup:
   763                           
   764                           	psect	text2
   765  0187                     __ptext2:	
   766 ;; *************** function _isr *****************
   767 ;; Defined at:
   768 ;;		line 60 in file "LAB9.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          4       0       0       0       0
   785 ;;      Totals:         4       0       0       0       0
   786 ;;Total ram usage:        4 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 2
   789 ;; This function calls:
   790 ;;		_displays
   791 ;;		_tmr0
   792 ;; This function is called by:
   793 ;;		Interrupt level 1
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _isr
   799  0187                     _isr:
   800  0187                     i1l1312:
   801                           
   802                           ;LAB9.c: 61:     if(PIR1bits.ADIF){
   803  0187  1283               	bcf	3,5	;RP0=0, select bank0
   804  0188  1303               	bcf	3,6	;RP1=0, select bank0
   805  0189  1F0C               	btfss	12,6	;volatile
   806  018A  298C               	goto	u15_21
   807  018B  298D               	goto	u15_20
   808  018C                     u15_21:
   809  018C  29A4               	goto	i1l1322
   810  018D                     u15_20:
   811  018D                     i1l1314:
   812                           
   813                           ;LAB9.c: 62:         if(ADCON0bits.CHS == 1){
   814  018D  0C1F               	rrf	31,w	;volatile
   815  018E  00F3               	movwf	??_isr
   816  018F  0C73               	rrf	??_isr,w
   817  0190  390F               	andlw	15
   818  0191  3A01               	xorlw	1
   819  0192  1D03               	skipz
   820  0193  2995               	goto	u16_21
   821  0194  2996               	goto	u16_20
   822  0195                     u16_21:
   823  0195  299D               	goto	i1l1318
   824  0196                     u16_20:
   825  0196                     i1l1316:
   826                           
   827                           ;LAB9.c: 63:             CCPR2L = (ADRESH>>1)+118;
   828  0196  081E               	movf	30,w	;volatile
   829  0197  00F3               	movwf	??_isr
   830  0198  1003               	clrc
   831  0199  0C73               	rrf	??_isr,w
   832  019A  3E76               	addlw	118
   833  019B  009B               	movwf	27	;volatile
   834                           
   835                           ;LAB9.c: 65:         }
   836  019C  29A3               	goto	i1l1320
   837  019D                     i1l1318:
   838                           
   839                           ;LAB9.c: 67:             CCPR1L = (ADRESH>>1)+118;
   840  019D  081E               	movf	30,w	;volatile
   841  019E  00F3               	movwf	??_isr
   842  019F  1003               	clrc
   843  01A0  0C73               	rrf	??_isr,w
   844  01A1  3E76               	addlw	118
   845  01A2  0095               	movwf	21	;volatile
   846  01A3                     i1l1320:
   847                           
   848                           ;LAB9.c: 69:         PIR1bits.ADIF = 0;
   849  01A3  130C               	bcf	12,6	;volatile
   850  01A4                     i1l1322:
   851                           
   852                           ;LAB9.c: 71:     if(T0IF){
   853  01A4  1D0B               	btfss	11,2	;volatile
   854  01A5  29A7               	goto	u17_21
   855  01A6  29A8               	goto	u17_20
   856  01A7                     u17_21:
   857  01A7  29B2               	goto	i1l85
   858  01A8                     u17_20:
   859  01A8                     i1l1324:
   860                           
   861                           ;LAB9.c: 72:         tmr0();
   862  01A8  120A  118A  21EC  120A  118A  	fcall	_tmr0
   863  01AD                     i1l1326:
   864                           
   865                           ;LAB9.c: 73:         displays();
   866  01AD  120A  118A  213E  120A  118A  	fcall	_displays
   867  01B2                     i1l85:
   868  01B2  0876               	movf	??_isr+3,w
   869  01B3  008A               	movwf	10
   870  01B4  0875               	movf	??_isr+2,w
   871  01B5  0084               	movwf	4
   872  01B6  0E74               	swapf	??_isr+1,w
   873  01B7  0083               	movwf	3
   874  01B8  0EFE               	swapf	btemp,f
   875  01B9  0E7E               	swapf	btemp,w
   876  01BA  0009               	retfie
   877  01BB                     __end_of_isr:
   878                           
   879                           	psect	intentry
   880  0004                     __pintentry:	
   881                           ;incstack = 0
   882                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   883                           
   884  0004                     interrupt_function:
   885  007E                     saved_w	set	btemp
   886  0004  00FE               	movwf	btemp
   887  0005  0E03               	swapf	3,w
   888  0006  00F4               	movwf	??_isr+1
   889  0007  0804               	movf	4,w
   890  0008  00F5               	movwf	??_isr+2
   891  0009  080A               	movf	10,w
   892  000A  00F6               	movwf	??_isr+3
   893  000B  120A  118A  2987   	ljmp	_isr
   894                           
   895                           	psect	text3
   896  01EC                     __ptext3:	
   897 ;; *************** function _tmr0 *****************
   898 ;; Defined at:
   899 ;;		line 173 in file "LAB9.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_isr
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _tmr0
   928  01EC                     _tmr0:
   929  01EC                     i1l882:	
   930                           ;incstack = 0
   931                           ; Regs used in _tmr0: [wreg]
   932                           
   933                           
   934                           ;LAB9.c: 174:     INTCONbits.T0IF = 0;
   935  01EC  110B               	bcf	11,2	;volatile
   936  01ED                     i1l884:
   937                           
   938                           ;LAB9.c: 175:     TMR0 = 237;
   939  01ED  30ED               	movlw	237
   940  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   941  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   942  01F0  0081               	movwf	1	;volatile
   943  01F1                     i1l105:
   944  01F1  0008               	return
   945  01F2                     __end_of_tmr0:
   946                           
   947                           	psect	text4
   948  013E                     __ptext4:	
   949 ;; *************** function _displays *****************
   950 ;; Defined at:
   951 ;;		line 186 in file "LAB9.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0
   967 ;;      Temps:          1       0       0       0       0
   968 ;;      Totals:         1       0       0       0       0
   969 ;;Total ram usage:        1 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 1
   972 ;; This function calls:
   973 ;;		_tabla
   974 ;;		_tabla_p
   975 ;; This function is called by:
   976 ;;		_isr
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _displays
   982  013E                     _displays:
   983  013E                     i1l1214:	
   984                           ;incstack = 0
   985                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   986                           
   987                           
   988                           ;LAB9.c: 187:     PORTE = disp_selector;
   989  013E  087C               	movf	_disp_selector,w
   990  013F  1283               	bcf	3,5	;RP0=0, select bank0
   991  0140  1303               	bcf	3,6	;RP1=0, select bank0
   992  0141  0089               	movwf	9	;volatile
   993  0142                     i1l1216:
   994                           
   995                           ;LAB9.c: 188:     if(disp_selector == 0b001){
   996  0142  037C               	decf	_disp_selector,w
   997  0143  1D03               	btfss	3,2
   998  0144  2946               	goto	u11_21
   999  0145  2947               	goto	u11_20
  1000  0146                     u11_21:
  1001  0146  2959               	goto	i1l1222
  1002  0147                     u11_20:
  1003  0147                     i1l1218:
  1004                           
  1005                           ;LAB9.c: 189:         PORTD = tabla(dig[0]);
  1006  0147  0821               	movf	_dig+1,w
  1007  0148  00F1               	movwf	tabla@a+1
  1008  0149  0820               	movf	_dig,w
  1009  014A  00F0               	movwf	tabla@a
  1010  014B  120A  118A  20E5  120A  118A  	fcall	_tabla
  1011  0150  0870               	movf	?_tabla,w
  1012  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0153  0088               	movwf	8	;volatile
  1015  0154                     i1l1220:
  1016                           
  1017                           ;LAB9.c: 190:         disp_selector = 0b010;
  1018  0154  3002               	movlw	2
  1019  0155  00F2               	movwf	??_displays
  1020  0156  0872               	movf	??_displays,w
  1021  0157  00FC               	movwf	_disp_selector
  1022                           
  1023                           ;LAB9.c: 191:     }
  1024  0158  2986               	goto	i1l118
  1025  0159                     i1l1222:
  1026  0159  3002               	movlw	2
  1027  015A  067C               	xorwf	_disp_selector,w
  1028  015B  1D03               	btfss	3,2
  1029  015C  295E               	goto	u12_21
  1030  015D  295F               	goto	u12_20
  1031  015E                     u12_21:
  1032  015E  2971               	goto	i1l1228
  1033  015F                     u12_20:
  1034  015F                     i1l1224:
  1035                           
  1036                           ;LAB9.c: 193:         PORTD = tabla(dig[1]);
  1037  015F  0823               	movf	_dig+3,w
  1038  0160  00F1               	movwf	tabla@a+1
  1039  0161  0822               	movf	_dig+2,w
  1040  0162  00F0               	movwf	tabla@a
  1041  0163  120A  118A  20E5  120A  118A  	fcall	_tabla
  1042  0168  0870               	movf	?_tabla,w
  1043  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1044  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1045  016B  0088               	movwf	8	;volatile
  1046  016C                     i1l1226:
  1047                           
  1048                           ;LAB9.c: 194:         disp_selector = 0b100;
  1049  016C  3004               	movlw	4
  1050  016D  00F2               	movwf	??_displays
  1051  016E  0872               	movf	??_displays,w
  1052  016F  00FC               	movwf	_disp_selector
  1053                           
  1054                           ;LAB9.c: 195:     }
  1055  0170  2986               	goto	i1l118
  1056  0171                     i1l1228:
  1057  0171  3004               	movlw	4
  1058  0172  067C               	xorwf	_disp_selector,w
  1059  0173  1D03               	btfss	3,2
  1060  0174  2976               	goto	u13_21
  1061  0175  2977               	goto	u13_20
  1062  0176                     u13_21:
  1063  0176  2986               	goto	i1l118
  1064  0177                     u13_20:
  1065  0177                     i1l1230:
  1066                           
  1067                           ;LAB9.c: 197:         PORTD = tabla_p(dig[2]);
  1068  0177  0825               	movf	_dig+5,w
  1069  0178  00F1               	movwf	tabla_p@a+1
  1070  0179  0824               	movf	_dig+4,w
  1071  017A  00F0               	movwf	tabla_p@a
  1072  017B  120A  118A  208C  120A  118A  	fcall	_tabla_p
  1073  0180  0870               	movf	?_tabla_p,w
  1074  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0183  0088               	movwf	8	;volatile
  1077  0184                     i1l1232:
  1078                           
  1079                           ;LAB9.c: 198:         disp_selector = 0b001;
  1080  0184  01FC               	clrf	_disp_selector
  1081  0185  0AFC               	incf	_disp_selector,f
  1082  0186                     i1l118:
  1083  0186  0008               	return
  1084  0187                     __end_of_displays:
  1085                           
  1086                           	psect	text5
  1087  008C                     __ptext5:	
  1088 ;; *************** function _tabla_p *****************
  1089 ;; Defined at:
  1090 ;;		line 240 in file "LAB9.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  a               2    0[COMMON] int 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2    0[COMMON] int 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         2       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0
  1107 ;;      Totals:         2       0       0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_displays
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _tabla_p
  1119  008C                     _tabla_p:
  1120  008C                     i1l1144:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _tabla_p: [wreg-fsr0h+status,2+status,0]
  1123                           
  1124                           
  1125                           ;LAB9.c: 241:     switch (a){
  1126  008C  28BF               	goto	i1l1208
  1127  008D                     i1l1146:
  1128                           
  1129                           ;LAB9.c: 243:             return 0b10111111;
  1130  008D  30BF               	movlw	191
  1131  008E  00F0               	movwf	?_tabla_p
  1132  008F  3000               	movlw	0
  1133  0090  00F1               	movwf	?_tabla_p+1
  1134  0091  28E4               	goto	i1l139
  1135  0092                     i1l1152:
  1136                           
  1137                           ;LAB9.c: 246:             return 0b10000110;
  1138  0092  3086               	movlw	134
  1139  0093  00F0               	movwf	?_tabla_p
  1140  0094  3000               	movlw	0
  1141  0095  00F1               	movwf	?_tabla_p+1
  1142  0096  28E4               	goto	i1l139
  1143  0097                     i1l1158:
  1144                           
  1145                           ;LAB9.c: 249:             return 0b11011011;
  1146  0097  30DB               	movlw	219
  1147  0098  00F0               	movwf	?_tabla_p
  1148  0099  3000               	movlw	0
  1149  009A  00F1               	movwf	?_tabla_p+1
  1150  009B  28E4               	goto	i1l139
  1151  009C                     i1l1164:
  1152                           
  1153                           ;LAB9.c: 252:             return 0b11001111;
  1154  009C  30CF               	movlw	207
  1155  009D  00F0               	movwf	?_tabla_p
  1156  009E  3000               	movlw	0
  1157  009F  00F1               	movwf	?_tabla_p+1
  1158  00A0  28E4               	goto	i1l139
  1159  00A1                     i1l1170:
  1160                           
  1161                           ;LAB9.c: 255:             return 0b11100110;
  1162  00A1  30E6               	movlw	230
  1163  00A2  00F0               	movwf	?_tabla_p
  1164  00A3  3000               	movlw	0
  1165  00A4  00F1               	movwf	?_tabla_p+1
  1166  00A5  28E4               	goto	i1l139
  1167  00A6                     i1l1176:
  1168                           
  1169                           ;LAB9.c: 258:             return 0b11101101;
  1170  00A6  30ED               	movlw	237
  1171  00A7  00F0               	movwf	?_tabla_p
  1172  00A8  3000               	movlw	0
  1173  00A9  00F1               	movwf	?_tabla_p+1
  1174  00AA  28E4               	goto	i1l139
  1175  00AB                     i1l1182:
  1176                           
  1177                           ;LAB9.c: 261:             return 0b11111101;
  1178  00AB  30FD               	movlw	253
  1179  00AC  00F0               	movwf	?_tabla_p
  1180  00AD  3000               	movlw	0
  1181  00AE  00F1               	movwf	?_tabla_p+1
  1182  00AF  28E4               	goto	i1l139
  1183  00B0                     i1l1188:
  1184                           
  1185                           ;LAB9.c: 264:             return 0b10000111;
  1186  00B0  3087               	movlw	135
  1187  00B1  00F0               	movwf	?_tabla_p
  1188  00B2  3000               	movlw	0
  1189  00B3  00F1               	movwf	?_tabla_p+1
  1190  00B4  28E4               	goto	i1l139
  1191  00B5                     i1l1194:
  1192                           
  1193                           ;LAB9.c: 267:             return 0b11111111;
  1194  00B5  30FF               	movlw	255
  1195  00B6  00F0               	movwf	?_tabla_p
  1196  00B7  3000               	movlw	0
  1197  00B8  00F1               	movwf	?_tabla_p+1
  1198  00B9  28E4               	goto	i1l139
  1199  00BA                     i1l1200:
  1200                           
  1201                           ;LAB9.c: 270:             return 0b11101111;
  1202  00BA  30EF               	movlw	239
  1203  00BB  00F0               	movwf	?_tabla_p
  1204  00BC  3000               	movlw	0
  1205  00BD  00F1               	movwf	?_tabla_p+1
  1206  00BE  28E4               	goto	i1l139
  1207  00BF                     i1l1208:
  1208                           
  1209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1210                           ; Switch size 1, requested type "simple"
  1211                           ; Number of cases is 1, Range of values is 0 to 0
  1212                           ; switch strategies available:
  1213                           ; Name         Instructions Cycles
  1214                           ; simple_byte            4     3 (average)
  1215                           ; direct_byte           11     8 (fixed)
  1216                           ; jumptable            260     6 (fixed)
  1217                           ;	Chosen strategy is simple_byte
  1218  00BF  0871               	movf	tabla_p@a+1,w
  1219  00C0  3A00               	xorlw	0	; case 0
  1220  00C1  1903               	skipnz
  1221  00C2  28C4               	goto	i1l1482
  1222  00C3  28E4               	goto	i1l139
  1223  00C4                     i1l1482:
  1224                           
  1225                           ; Switch size 1, requested type "simple"
  1226                           ; Number of cases is 10, Range of values is 0 to 9
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte           31    16 (average)
  1230                           ; direct_byte           38     8 (fixed)
  1231                           ; jumptable            260     6 (fixed)
  1232                           ;	Chosen strategy is simple_byte
  1233  00C4  0870               	movf	tabla_p@a,w
  1234  00C5  3A00               	xorlw	0	; case 0
  1235  00C6  1903               	skipnz
  1236  00C7  288D               	goto	i1l1146
  1237  00C8  3A01               	xorlw	1	; case 1
  1238  00C9  1903               	skipnz
  1239  00CA  2892               	goto	i1l1152
  1240  00CB  3A03               	xorlw	3	; case 2
  1241  00CC  1903               	skipnz
  1242  00CD  2897               	goto	i1l1158
  1243  00CE  3A01               	xorlw	1	; case 3
  1244  00CF  1903               	skipnz
  1245  00D0  289C               	goto	i1l1164
  1246  00D1  3A07               	xorlw	7	; case 4
  1247  00D2  1903               	skipnz
  1248  00D3  28A1               	goto	i1l1170
  1249  00D4  3A01               	xorlw	1	; case 5
  1250  00D5  1903               	skipnz
  1251  00D6  28A6               	goto	i1l1176
  1252  00D7  3A03               	xorlw	3	; case 6
  1253  00D8  1903               	skipnz
  1254  00D9  28AB               	goto	i1l1182
  1255  00DA  3A01               	xorlw	1	; case 7
  1256  00DB  1903               	skipnz
  1257  00DC  28B0               	goto	i1l1188
  1258  00DD  3A0F               	xorlw	15	; case 8
  1259  00DE  1903               	skipnz
  1260  00DF  28B5               	goto	i1l1194
  1261  00E0  3A01               	xorlw	1	; case 9
  1262  00E1  1903               	skipnz
  1263  00E2  28BA               	goto	i1l1200
  1264  00E3  28E4               	goto	i1l139
  1265  00E4                     i1l139:
  1266  00E4  0008               	return
  1267  00E5                     __end_of_tabla_p:
  1268                           
  1269                           	psect	text6
  1270  00E5                     __ptext6:	
  1271 ;; *************** function _tabla *****************
  1272 ;; Defined at:
  1273 ;;		line 202 in file "LAB9.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  a               2    0[COMMON] int 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2    0[COMMON] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         2       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         2       0       0       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_displays
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _tabla
  1302  00E5                     _tabla:
  1303  00E5                     i1l1074:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1306                           
  1307                           
  1308                           ;LAB9.c: 203:     switch (a){
  1309  00E5  2918               	goto	i1l1138
  1310  00E6                     i1l1076:
  1311                           
  1312                           ;LAB9.c: 205:             return 0b00111111;
  1313  00E6  303F               	movlw	63
  1314  00E7  00F0               	movwf	?_tabla
  1315  00E8  3000               	movlw	0
  1316  00E9  00F1               	movwf	?_tabla+1
  1317  00EA  293D               	goto	i1l123
  1318  00EB                     i1l1082:
  1319                           
  1320                           ;LAB9.c: 208:             return 0b00000110;
  1321  00EB  3006               	movlw	6
  1322  00EC  00F0               	movwf	?_tabla
  1323  00ED  3000               	movlw	0
  1324  00EE  00F1               	movwf	?_tabla+1
  1325  00EF  293D               	goto	i1l123
  1326  00F0                     i1l1088:
  1327                           
  1328                           ;LAB9.c: 211:             return 0b01011011;
  1329  00F0  305B               	movlw	91
  1330  00F1  00F0               	movwf	?_tabla
  1331  00F2  3000               	movlw	0
  1332  00F3  00F1               	movwf	?_tabla+1
  1333  00F4  293D               	goto	i1l123
  1334  00F5                     i1l1094:
  1335                           
  1336                           ;LAB9.c: 214:             return 0b01001111;
  1337  00F5  304F               	movlw	79
  1338  00F6  00F0               	movwf	?_tabla
  1339  00F7  3000               	movlw	0
  1340  00F8  00F1               	movwf	?_tabla+1
  1341  00F9  293D               	goto	i1l123
  1342  00FA                     i1l1100:
  1343                           
  1344                           ;LAB9.c: 217:             return 0b01100110;
  1345  00FA  3066               	movlw	102
  1346  00FB  00F0               	movwf	?_tabla
  1347  00FC  3000               	movlw	0
  1348  00FD  00F1               	movwf	?_tabla+1
  1349  00FE  293D               	goto	i1l123
  1350  00FF                     i1l1106:
  1351                           
  1352                           ;LAB9.c: 220:             return 0b01101101;
  1353  00FF  306D               	movlw	109
  1354  0100  00F0               	movwf	?_tabla
  1355  0101  3000               	movlw	0
  1356  0102  00F1               	movwf	?_tabla+1
  1357  0103  293D               	goto	i1l123
  1358  0104                     i1l1112:
  1359                           
  1360                           ;LAB9.c: 223:             return 0b01111101;
  1361  0104  307D               	movlw	125
  1362  0105  00F0               	movwf	?_tabla
  1363  0106  3000               	movlw	0
  1364  0107  00F1               	movwf	?_tabla+1
  1365  0108  293D               	goto	i1l123
  1366  0109                     i1l1118:
  1367                           
  1368                           ;LAB9.c: 226:             return 0b00000111;
  1369  0109  3007               	movlw	7
  1370  010A  00F0               	movwf	?_tabla
  1371  010B  3000               	movlw	0
  1372  010C  00F1               	movwf	?_tabla+1
  1373  010D  293D               	goto	i1l123
  1374  010E                     i1l1124:
  1375                           
  1376                           ;LAB9.c: 229:             return 0b01111111;
  1377  010E  307F               	movlw	127
  1378  010F  00F0               	movwf	?_tabla
  1379  0110  3000               	movlw	0
  1380  0111  00F1               	movwf	?_tabla+1
  1381  0112  293D               	goto	i1l123
  1382  0113                     i1l1130:
  1383                           
  1384                           ;LAB9.c: 232:             return 0b01101111;
  1385  0113  306F               	movlw	111
  1386  0114  00F0               	movwf	?_tabla
  1387  0115  3000               	movlw	0
  1388  0116  00F1               	movwf	?_tabla+1
  1389  0117  293D               	goto	i1l123
  1390  0118                     i1l1138:
  1391                           
  1392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1393                           ; Switch size 1, requested type "simple"
  1394                           ; Number of cases is 1, Range of values is 0 to 0
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte            4     3 (average)
  1398                           ; direct_byte           11     8 (fixed)
  1399                           ; jumptable            260     6 (fixed)
  1400                           ;	Chosen strategy is simple_byte
  1401  0118  0871               	movf	tabla@a+1,w
  1402  0119  3A00               	xorlw	0	; case 0
  1403  011A  1903               	skipnz
  1404  011B  291D               	goto	i1l1484
  1405  011C  293D               	goto	i1l123
  1406  011D                     i1l1484:
  1407                           
  1408                           ; Switch size 1, requested type "simple"
  1409                           ; Number of cases is 10, Range of values is 0 to 9
  1410                           ; switch strategies available:
  1411                           ; Name         Instructions Cycles
  1412                           ; simple_byte           31    16 (average)
  1413                           ; direct_byte           38     8 (fixed)
  1414                           ; jumptable            260     6 (fixed)
  1415                           ;	Chosen strategy is simple_byte
  1416  011D  0870               	movf	tabla@a,w
  1417  011E  3A00               	xorlw	0	; case 0
  1418  011F  1903               	skipnz
  1419  0120  28E6               	goto	i1l1076
  1420  0121  3A01               	xorlw	1	; case 1
  1421  0122  1903               	skipnz
  1422  0123  28EB               	goto	i1l1082
  1423  0124  3A03               	xorlw	3	; case 2
  1424  0125  1903               	skipnz
  1425  0126  28F0               	goto	i1l1088
  1426  0127  3A01               	xorlw	1	; case 3
  1427  0128  1903               	skipnz
  1428  0129  28F5               	goto	i1l1094
  1429  012A  3A07               	xorlw	7	; case 4
  1430  012B  1903               	skipnz
  1431  012C  28FA               	goto	i1l1100
  1432  012D  3A01               	xorlw	1	; case 5
  1433  012E  1903               	skipnz
  1434  012F  28FF               	goto	i1l1106
  1435  0130  3A03               	xorlw	3	; case 6
  1436  0131  1903               	skipnz
  1437  0132  2904               	goto	i1l1112
  1438  0133  3A01               	xorlw	1	; case 7
  1439  0134  1903               	skipnz
  1440  0135  2909               	goto	i1l1118
  1441  0136  3A0F               	xorlw	15	; case 8
  1442  0137  1903               	skipnz
  1443  0138  290E               	goto	i1l1124
  1444  0139  3A01               	xorlw	1	; case 9
  1445  013A  1903               	skipnz
  1446  013B  2913               	goto	i1l1130
  1447  013C  293D               	goto	i1l123
  1448  013D                     i1l123:
  1449  013D  0008               	return
  1450  013E                     __end_of_tabla:
  1451  007E                     btemp	set	126	;btemp
  1452  007E                     wtemp0	set	126
  1453                           
  1454                           	psect	config
  1455                           
  1456                           ;Config register CONFIG1 @ 0x2007
  1457                           ;	Oscillator Selection bits
  1458                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1459                           ;	Watchdog Timer Enable bit
  1460                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1461                           ;	Power-up Timer Enable bit
  1462                           ;	PWRTE = OFF, PWRT disabled
  1463                           ;	RE3/MCLR pin function select bit
  1464                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1465                           ;	Code Protection bit
  1466                           ;	CP = OFF, Program memory code protection is disabled
  1467                           ;	Data Code Protection bit
  1468                           ;	CPD = OFF, Data memory code protection is disabled
  1469                           ;	Brown Out Reset Selection bits
  1470                           ;	BOREN = OFF, BOR disabled
  1471                           ;	Internal External Switchover bit
  1472                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1473                           ;	Fail-Safe Clock Monitor Enabled bit
  1474                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1475                           ;	Low Voltage Programming Enable bit
  1476                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1477                           ;	In-Circuit Debugger Mode bit
  1478                           ;	DEBUG = 0x1, unprogrammed default
  1479  2007                     	org	8199
  1480  2007  20D4               	dw	8404
  1481                           
  1482                           ;Config register CONFIG2 @ 0x2008
  1483                           ;	Brown-out Reset Selection bit
  1484                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1485                           ;	Flash Program Memory Self Write Enable bits
  1486                           ;	WRT = OFF, Write protection off
  1487  2008                     	org	8200
  1488  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      2       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_displays
    _displays->_tabla
    _displays->_tabla_p

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     272
                                              3 COMMON     4     4      0
                           _displays
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     272
                                              2 COMMON     1     1      0
                              _tabla
                            _tabla_p
 ---------------------------------------------------------------------------------
 (4) _tabla_p                                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
     _tabla_p
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       8       5       10.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 21:14:29 2021

                     l99 0082                      l101 0086                      l102 008B  
                    u140 0086                      u141 0085                      u180 01C7  
                    u181 01C6                      u190 01D0                      _PR2 0092  
                    u407 01D6                      u191 01CF                      u417 01E2  
                    u427 0059                      _dig 0020                      _isr 0187  
                    fsr0 0004                     l1300 007A                     l1310 0081  
                   l1302 007B                     l1304 007C                     l1240 0038  
                   l1306 007E                     l1250 0040                     l1242 003C  
                   l1234 0026                     l1330 01C0                     l1308 007F  
                   l1260 004A                     l1252 0041                     l1244 003D  
                   l1236 002A                     l1340 01D9                     l1332 01C3  
                   l1270 0055                     l1262 004B                     l1254 0042  
                   l1246 003E                     l1238 002B                     l1334 01C7  
                   l1280 0062                     l1272 005C                     l1264 004C  
                   l1256 0043                     l1248 003F                     l1344 01DE  
                   l1336 01D0                     l1328 01BB                     l1290 006A  
                   l1282 0065                     l1274 005D                     l1266 0052  
                   l1258 0047                     l1346 01E5                     l1338 01D2  
                   l1292 006E                     l1284 0066                     l1276 005E  
                   l1268 0054                     l1294 0072                     l1286 0067  
                   l1278 005F                     l1296 0076                     l1288 0068  
                   l1298 0078                     ?_isr 0070                     _T0IF 005A  
                   i1l85 01B2                     _TMR0 0001                     _digi 007B  
                   _main 01BB                     _tmr0 01EC                     btemp 007E  
                   start 000E                    ??_isr 0073                    ?_main 0070  
                  ?_tmr0 0070                    _ANSEL 0188                    i1l105 01F1  
                  i1l123 013D                    i1l118 0186                    i1l139 00E4  
                  i1l882 01EC                    i1l884 01ED                    u11_20 0147  
                  u11_21 0146                    u12_20 015F                    u12_21 015E  
                  u13_20 0177                    u13_21 0176                    u15_20 018D  
                  u15_21 018C                    u16_20 0196                    u16_21 0195  
                  u17_20 01A8                    u17_21 01A7                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _cont2 0079                    _tabla 00E5  
        __end_of_tabla_p 00E5                    _setup 0026                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 01EC             __end_of_tmr0 01F2                   ??_main 0027  
                 ??_tmr0 0070                   ?_tabla 0070                   _ADRESH 001E  
                 _CCPR1L 0015                   _CCPR2L 001B                   ?_setup 0070  
                 _ANSELH 0189                   i1l1100 00FA                   i1l1112 0104  
                 i1l1200 00BA                   i1l1130 0113                   i1l1106 00FF  
                 i1l1124 010E                   i1l1220 0154                   i1l1118 0109  
                 i1l1230 0177                   i1l1222 0159                   i1l1214 013E  
                 i1l1152 0092                   i1l1208 00BF                   i1l1144 008C  
                 i1l1232 0184                   i1l1224 015F                   i1l1216 0142  
                 i1l1320 01A3                   i1l1312 0187                   i1l1082 00EB  
                 i1l1138 0118                   i1l1074 00E5                   i1l1170 00A1  
                 i1l1146 008D                   i1l1226 016C                   i1l1218 0147  
                 i1l1314 018D                   i1l1322 01A4                   i1l1076 00E6  
                 i1l1164 009C                   i1l1228 0171                   i1l1324 01A8  
                 i1l1316 0196                   i1l1094 00F5                   i1l1182 00AB  
                 i1l1158 0097                   i1l1326 01AD                   i1l1318 019D  
                 i1l1088 00F0                   i1l1176 00A6                   i1l1194 00B5  
                 i1l1188 00B0                   i1l1482 00C4                   i1l1484 011D  
       __end_of_displays 0187                   tabla@a 0070             __pdataCOMMON 007C  
              ??_tabla_p 0072                   saved_w 007E  __end_of__initialization 0022  
         __pcstackCOMMON 0070            __end_of_tabla 013E            __end_of_setup 008C  
         _OPTION_REGbits 0081                  ??_tabla 0072                  ??_setup 0026  
             __pbssBANK0 0020               __pmaintext 01BB               __pintentry 0004  
              ?_displays 0070                  __ptext1 0026                  __ptext2 0187  
                __ptext3 01EC                  __ptext4 013E                  __ptext5 008C  
                __ptext6 00E5                _T2CONbits 0012             __size_of_isr 0034  
                _tabla_p 008C               ??_displays 0072     end_of_initialization 0022  
              _TRISCbits 0087              _CCP1CONbits 0017              _CCP2CONbits 001D  
          __pidataCOMMON 01F2      start_initialization 0011              __end_of_isr 01BB  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0026  
      __size_of_displays 0049                 ?_tabla_p 0070           __size_of_tabla 0059  
         __size_of_setup 0066        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_tabla_p 0059                 _displays 013E                 _cont_vol 0077  
          __size_of_main 0031            __size_of_tmr0 0006               _INTCONbits 000B  
               tabla_p@a 0070                 intlevel1 0000               _OSCCONbits 008F  
          _disp_selector 007C  
