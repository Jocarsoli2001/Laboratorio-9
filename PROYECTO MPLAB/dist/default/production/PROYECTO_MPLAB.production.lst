

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 22:31:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataCOMMON
   210  011C                     __pidataCOMMON:
   211                           
   212                           ;initializer for _disp_selector
   213  011C  3401               	retlw	1
   214  0012                     _T2CONbits	set	18
   215  001D                     _CCP2CONbits	set	29
   216  000B                     _INTCONbits	set	11
   217  0001                     _TMR0	set	1
   218  0009                     _PORTE	set	9
   219  0007                     _PORTC	set	7
   220  0008                     _PORTD	set	8
   221  0005                     _PORTA	set	5
   222  0017                     _CCP1CONbits	set	23
   223  0015                     _CCPR1L	set	21
   224  001E                     _ADRESH	set	30
   225  001B                     _CCPR2L	set	27
   226  001F                     _ADCON0bits	set	31
   227  000C                     _PIR1bits	set	12
   228  005A                     _T0IF	set	90
   229  0092                     _PR2	set	146
   230  0087                     _TRISCbits	set	135
   231  008C                     _PIE1bits	set	140
   232  009F                     _ADCON1bits	set	159
   233  0081                     _OPTION_REGbits	set	129
   234  008F                     _OSCCONbits	set	143
   235  0089                     _TRISE	set	137
   236  0088                     _TRISD	set	136
   237  0087                     _TRISC	set	135
   238  0085                     _TRISA	set	133
   239  009E                     _ADRESL	set	158
   240  0189                     _ANSELH	set	393
   241  0188                     _ANSEL	set	392
   242                           
   243                           	psect	cinit
   244  000F                     start_initialization:	
   245                           ; #config settings
   246                           
   247  000F                     __initialization:
   248                           
   249                           ; Initialize objects allocated to COMMON
   250  000F  120A  118A  211C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   251  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   252                           
   253                           ; Clear objects allocated to BANK0
   254  0015  01A0               	clrf	__pbssBANK0& (0+127)
   255  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   256  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   257  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   258  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   259  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   260                           
   261                           ; Clear objects allocated to COMMON
   262  001B  01F6               	clrf	__pbssCOMMON& (0+127)
   263  001C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   264  001D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   265  001E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   266  001F  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   267  0020                     end_of_initialization:	
   268                           ;End of C runtime variable initialization code
   269                           
   270  0020                     __end_of__initialization:
   271  0020  0183               	clrf	3
   272  0021  120A  118A  28DB   	ljmp	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMMON
   275  0076                     __pbssCOMMON:
   276  0076                     _cont_vol:
   277  0076                     	ds	2
   278  0078                     _cont2:
   279  0078                     	ds	2
   280  007A                     _digi:
   281  007A                     	ds	1
   282                           
   283                           	psect	dataCOMMON
   284  007B                     __pdataCOMMON:
   285  007B                     _disp_selector:
   286  007B                     	ds	1
   287                           
   288                           	psect	bssBANK0
   289  0020                     __pbssBANK0:
   290  0020                     _dig:
   291  0020                     	ds	6
   292                           
   293                           	psect	cstackCOMMON
   294  0070                     __pcstackCOMMON:
   295  0070                     ?_tmr0:
   296  0070                     ??_tmr0:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_setup:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_isr:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ??_isr:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311                           
   312                           ; 1 bytes @ 0x0
   313  0070                     	ds	4
   314  0074                     ??_setup:
   315                           
   316                           ; 1 bytes @ 0x4
   317  0074                     	ds	1
   318  0075                     ??_main:
   319                           
   320                           ; 1 bytes @ 0x5
   321  0075                     	ds	1
   322                           
   323                           	psect	maintext
   324  00DB                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 79 in file "LAB9.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          1       0       0       0       0
   347 ;;      Totals:         1       0       0       0       0
   348 ;;Total ram usage:        1 bytes
   349 ;; Hardware stack levels required when called: 3
   350 ;; This function calls:
   351 ;;		_setup
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           
   358                           ;psect for function _main
   359  00DB                     _main:
   360  00DB                     l796:	
   361                           ;incstack = 0
   362                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   363                           
   364                           
   365                           ;LAB9.c: 80:     setup();
   366  00DB  120A  118A  2024  120A  118A  	fcall	_setup
   367  00E0                     l798:
   368                           
   369                           ;LAB9.c: 81:     ADCON0bits.GO = 1;
   370  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   371  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   372  00E2  149F               	bsf	31,1	;volatile
   373  00E3                     l800:
   374                           
   375                           ;LAB9.c: 83:         if(ADCON0bits.GO == 0){
   376  00E3  189F               	btfsc	31,1	;volatile
   377  00E4  28E6               	goto	u71
   378  00E5  28E7               	goto	u70
   379  00E6                     u71:
   380  00E6  28E3               	goto	l800
   381  00E7                     u70:
   382  00E7                     l802:
   383                           
   384                           ;LAB9.c: 84:             if(ADCON0bits.CHS == 2){
   385  00E7  0C1F               	rrf	31,w	;volatile
   386  00E8  00F5               	movwf	??_main
   387  00E9  0C75               	rrf	??_main,w
   388  00EA  390F               	andlw	15
   389  00EB  3A02               	xorlw	2
   390  00EC  1D03               	skipz
   391  00ED  28EF               	goto	u81
   392  00EE  28F0               	goto	u80
   393  00EF                     u81:
   394  00EF  28FA               	goto	l808
   395  00F0                     u80:
   396  00F0                     l804:
   397                           
   398                           ;LAB9.c: 85:                 ADCON0bits.CHS = 1;
   399  00F0  081F               	movf	31,w	;volatile
   400  00F1  39C3               	andlw	-61
   401  00F2  3804               	iorlw	4
   402  00F3  009F               	movwf	31	;volatile
   403  00F4                     l806:
   404                           
   405                           ;LAB9.c: 86:                 _delay((unsigned long)((150)*(8000000/4000000.0)));
   406  00F4  3063               	movlw	99
   407  00F5  00F5               	movwf	??_main
   408  00F6                     u107:
   409  00F6  0BF5               	decfsz	??_main,f
   410  00F7  28F6               	goto	u107
   411  00F8  28F9               	nop2
   412                           
   413                           ;LAB9.c: 87:             }
   414  00F9  290B               	goto	l818
   415  00FA                     l808:
   416  00FA  0C1F               	rrf	31,w	;volatile
   417  00FB  00F5               	movwf	??_main
   418  00FC  0C75               	rrf	??_main,w
   419  00FD  390F               	andlw	15
   420  00FE  3A01               	xorlw	1
   421  00FF  1D03               	skipz
   422  0100  2902               	goto	u91
   423  0101  2903               	goto	u90
   424  0102                     u91:
   425  0102  2906               	goto	l814
   426  0103                     u90:
   427  0103                     l810:
   428                           
   429                           ;LAB9.c: 89:                 ADCON0bits.CHS = 0;
   430  0103  30C3               	movlw	-61
   431  0104  059F               	andwf	31,f	;volatile
   432  0105  28F4               	goto	l806
   433  0106                     l814:
   434                           
   435                           ;LAB9.c: 93:                 ADCON0bits.CHS = 2;
   436  0106  081F               	movf	31,w	;volatile
   437  0107  39C3               	andlw	-61
   438  0108  3808               	iorlw	8
   439  0109  009F               	movwf	31	;volatile
   440  010A  28F4               	goto	l806
   441  010B                     l818:
   442                           
   443                           ;LAB9.c: 96:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   444  010B  3085               	movlw	133
   445  010C  00F5               	movwf	??_main
   446  010D                     u117:
   447  010D  0BF5               	decfsz	??_main,f
   448  010E  290D               	goto	u117
   449  010F                     l820:
   450                           
   451                           ;LAB9.c: 97:             ADCON0bits.GO = 1;
   452  010F  1283               	bcf	3,5	;RP0=0, select bank0
   453  0110  1303               	bcf	3,6	;RP1=0, select bank0
   454  0111  149F               	bsf	31,1	;volatile
   455  0112  28E3               	goto	l800
   456  0113  120A  118A  280C   	ljmp	start
   457  0116                     __end_of_main:
   458                           
   459                           	psect	text1
   460  0024                     __ptext1:	
   461 ;; *************** function _setup *****************
   462 ;; Defined at:
   463 ;;		line 103 in file "LAB9.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          1       0       0       0       0
   480 ;;      Totals:         1       0       0       0       0
   481 ;;Total ram usage:        1 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 2
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _setup
   493  0024                     _setup:
   494  0024                     l702:	
   495                           ;incstack = 0
   496                           ; Regs used in _setup: [wreg+status,2+status,0]
   497                           
   498                           
   499                           ;LAB9.c: 106:     ANSEL = 0b00000111;
   500  0024  3007               	movlw	7
   501  0025  1683               	bsf	3,5	;RP0=1, select bank3
   502  0026  1703               	bsf	3,6	;RP1=1, select bank3
   503  0027  0088               	movwf	8	;volatile
   504  0028                     l704:
   505                           
   506                           ;LAB9.c: 107:     ANSELH = 0;
   507  0028  0189               	clrf	9	;volatile
   508  0029                     l706:
   509                           
   510                           ;LAB9.c: 109:     TRISA = 0b00000111;
   511  0029  3007               	movlw	7
   512  002A  1683               	bsf	3,5	;RP0=1, select bank1
   513  002B  1303               	bcf	3,6	;RP1=0, select bank1
   514  002C  0085               	movwf	5	;volatile
   515                           
   516                           ;LAB9.c: 110:     TRISC = 0;
   517  002D  0187               	clrf	7	;volatile
   518                           
   519                           ;LAB9.c: 111:     TRISD = 0;
   520  002E  0188               	clrf	8	;volatile
   521                           
   522                           ;LAB9.c: 112:     TRISE = 0;
   523  002F  0189               	clrf	9	;volatile
   524                           
   525                           ;LAB9.c: 114:     PORTA = 0;
   526  0030  1283               	bcf	3,5	;RP0=0, select bank0
   527  0031  1303               	bcf	3,6	;RP1=0, select bank0
   528  0032  0185               	clrf	5	;volatile
   529                           
   530                           ;LAB9.c: 115:     PORTD = 0;
   531  0033  0188               	clrf	8	;volatile
   532                           
   533                           ;LAB9.c: 116:     PORTC = 0;
   534  0034  0187               	clrf	7	;volatile
   535                           
   536                           ;LAB9.c: 117:     PORTE = 0;
   537  0035  0189               	clrf	9	;volatile
   538  0036                     l708:
   539                           
   540                           ;LAB9.c: 120:     OSCCONbits.IRCF = 0b0111;
   541  0036  3070               	movlw	112
   542  0037  1683               	bsf	3,5	;RP0=1, select bank1
   543  0038  1303               	bcf	3,6	;RP1=0, select bank1
   544  0039  048F               	iorwf	15,f	;volatile
   545  003A                     l710:
   546                           
   547                           ;LAB9.c: 121:     OSCCONbits.SCS = 1;
   548  003A  140F               	bsf	15,0	;volatile
   549  003B                     l712:
   550                           
   551                           ;LAB9.c: 124:     OPTION_REGbits.T0CS = 0;
   552  003B  1281               	bcf	1,5	;volatile
   553  003C                     l714:
   554                           
   555                           ;LAB9.c: 125:     OPTION_REGbits.T0SE = 0;
   556  003C  1201               	bcf	1,4	;volatile
   557  003D                     l716:
   558                           
   559                           ;LAB9.c: 126:     OPTION_REGbits.PSA = 0;
   560  003D  1181               	bcf	1,3	;volatile
   561  003E                     l718:
   562                           
   563                           ;LAB9.c: 127:     OPTION_REGbits.PS2 = 1;
   564  003E  1501               	bsf	1,2	;volatile
   565  003F                     l720:
   566                           
   567                           ;LAB9.c: 128:     OPTION_REGbits.PS1 = 1;
   568  003F  1481               	bsf	1,1	;volatile
   569  0040                     l722:
   570                           
   571                           ;LAB9.c: 129:     OPTION_REGbits.PS0 = 1;
   572  0040  1401               	bsf	1,0	;volatile
   573  0041                     l724:
   574                           
   575                           ;LAB9.c: 130:     TMR0 = 237;
   576  0041  30ED               	movlw	237
   577  0042  1283               	bcf	3,5	;RP0=0, select bank0
   578  0043  1303               	bcf	3,6	;RP1=0, select bank0
   579  0044  0081               	movwf	1	;volatile
   580  0045                     l726:
   581                           
   582                           ;LAB9.c: 133:     ADCON1bits.ADFM = 0;
   583  0045  1683               	bsf	3,5	;RP0=1, select bank1
   584  0046  1303               	bcf	3,6	;RP1=0, select bank1
   585  0047  139F               	bcf	31,7	;volatile
   586  0048                     l728:
   587                           
   588                           ;LAB9.c: 134:     ADCON1bits.VCFG0 = 0;
   589  0048  121F               	bcf	31,4	;volatile
   590  0049                     l730:
   591                           
   592                           ;LAB9.c: 135:     ADCON1bits.VCFG1 = 0;
   593  0049  129F               	bcf	31,5	;volatile
   594  004A                     l732:
   595                           
   596                           ;LAB9.c: 137:     ADCON0bits.ADCS = 0b10;
   597  004A  1283               	bcf	3,5	;RP0=0, select bank0
   598  004B  1303               	bcf	3,6	;RP1=0, select bank0
   599  004C  081F               	movf	31,w	;volatile
   600  004D  393F               	andlw	-193
   601  004E  3880               	iorlw	128
   602  004F  009F               	movwf	31	;volatile
   603  0050                     l734:
   604                           
   605                           ;LAB9.c: 138:     ADCON0bits.CHS = 0;
   606  0050  30C3               	movlw	-61
   607  0051  059F               	andwf	31,f	;volatile
   608  0052                     l736:
   609                           
   610                           ;LAB9.c: 139:     ADCON0bits.ADON = 1;
   611  0052  141F               	bsf	31,0	;volatile
   612  0053                     l738:
   613                           
   614                           ;LAB9.c: 140:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   615  0053  3021               	movlw	33
   616  0054  00F4               	movwf	??_setup
   617  0055                     u127:
   618  0055  0BF4               	decfsz	??_setup,f
   619  0056  2855               	goto	u127
   620  0057                     l740:
   621                           
   622                           ;LAB9.c: 143:     INTCONbits.T0IF = 0;
   623  0057  110B               	bcf	11,2	;volatile
   624  0058                     l742:
   625                           
   626                           ;LAB9.c: 144:     INTCONbits.T0IE = 1;
   627  0058  168B               	bsf	11,5	;volatile
   628  0059                     l744:
   629                           
   630                           ;LAB9.c: 145:     INTCONbits.GIE = 1;
   631  0059  178B               	bsf	11,7	;volatile
   632  005A                     l746:
   633                           
   634                           ;LAB9.c: 146:     PIR1bits.ADIF = 0;
   635  005A  1283               	bcf	3,5	;RP0=0, select bank0
   636  005B  1303               	bcf	3,6	;RP1=0, select bank0
   637  005C  130C               	bcf	12,6	;volatile
   638  005D                     l748:
   639                           
   640                           ;LAB9.c: 147:     PIE1bits.ADIE = 1;
   641  005D  1683               	bsf	3,5	;RP0=1, select bank1
   642  005E  1303               	bcf	3,6	;RP1=0, select bank1
   643  005F  170C               	bsf	12,6	;volatile
   644  0060                     l750:
   645                           
   646                           ;LAB9.c: 148:     INTCONbits.PEIE = 1;
   647  0060  170B               	bsf	11,6	;volatile
   648  0061                     l752:
   649                           
   650                           ;LAB9.c: 151:     TRISCbits.TRISC2 = 1;
   651  0061  1507               	bsf	7,2	;volatile
   652  0062                     l754:
   653                           
   654                           ;LAB9.c: 152:     TRISCbits.TRISC1 = 1;
   655  0062  1487               	bsf	7,1	;volatile
   656  0063                     l756:
   657                           
   658                           ;LAB9.c: 153:     PR2 = 255;
   659  0063  30FF               	movlw	255
   660  0064  0092               	movwf	18	;volatile
   661  0065                     l758:
   662                           
   663                           ;LAB9.c: 154:     CCP1CONbits.P1M = 0;
   664  0065  303F               	movlw	-193
   665  0066  1283               	bcf	3,5	;RP0=0, select bank0
   666  0067  1303               	bcf	3,6	;RP1=0, select bank0
   667  0068  0597               	andwf	23,f	;volatile
   668  0069                     l760:
   669                           
   670                           ;LAB9.c: 155:     CCP1CONbits.CCP1M = 0b1100;
   671  0069  0817               	movf	23,w	;volatile
   672  006A  39F0               	andlw	-16
   673  006B  380C               	iorlw	12
   674  006C  0097               	movwf	23	;volatile
   675  006D                     l762:
   676                           
   677                           ;LAB9.c: 156:     CCP2CONbits.CCP2M = 0b1100;
   678  006D  081D               	movf	29,w	;volatile
   679  006E  39F0               	andlw	-16
   680  006F  380C               	iorlw	12
   681  0070  009D               	movwf	29	;volatile
   682  0071                     l764:
   683                           
   684                           ;LAB9.c: 158:     CCPR1L = 0x0f;
   685  0071  300F               	movlw	15
   686  0072  0095               	movwf	21	;volatile
   687  0073                     l766:
   688                           
   689                           ;LAB9.c: 159:     CCPR2L = 0x0f;
   690  0073  300F               	movlw	15
   691  0074  009B               	movwf	27	;volatile
   692  0075                     l768:
   693                           
   694                           ;LAB9.c: 160:     CCP2CONbits.DC2B0 = 0;
   695  0075  121D               	bcf	29,4	;volatile
   696  0076                     l770:
   697                           
   698                           ;LAB9.c: 161:     CCP2CONbits.DC2B1 = 0;
   699  0076  129D               	bcf	29,5	;volatile
   700  0077                     l772:
   701                           
   702                           ;LAB9.c: 162:     CCP1CONbits.DC1B = 0;
   703  0077  30CF               	movlw	-49
   704  0078  0597               	andwf	23,f	;volatile
   705  0079                     l774:
   706                           
   707                           ;LAB9.c: 165:     PIR1bits.TMR2IF = 0;
   708  0079  108C               	bcf	12,1	;volatile
   709  007A                     l776:
   710                           
   711                           ;LAB9.c: 166:     T2CONbits.T2CKPS = 0b11;
   712  007A  3003               	movlw	3
   713  007B  0492               	iorwf	18,f	;volatile
   714  007C                     l778:
   715                           
   716                           ;LAB9.c: 167:     T2CONbits.TMR2ON = 1;
   717  007C  1512               	bsf	18,2	;volatile
   718  007D                     l98:	
   719                           ;LAB9.c: 169:     while(PIR1bits.TMR2IF == 0);
   720                           
   721  007D  1C8C               	btfss	12,1	;volatile
   722  007E  2880               	goto	u11
   723  007F  2881               	goto	u10
   724  0080                     u11:
   725  0080  287D               	goto	l98
   726  0081                     u10:
   727  0081                     l100:
   728                           
   729                           ;LAB9.c: 170:     PIR1bits.TMR2IF = 0;
   730  0081  108C               	bcf	12,1	;volatile
   731                           
   732                           ;LAB9.c: 172:     TRISCbits.TRISC2 = 0;
   733  0082  1683               	bsf	3,5	;RP0=1, select bank1
   734  0083  1303               	bcf	3,6	;RP1=0, select bank1
   735  0084  1107               	bcf	7,2	;volatile
   736                           
   737                           ;LAB9.c: 173:     TRISCbits.TRISC1 = 0;
   738  0085  1087               	bcf	7,1	;volatile
   739  0086                     l101:	
   740                           ;LAB9.c: 175:     return;
   741                           
   742  0086  0008               	return
   743  0087                     __end_of_setup:
   744                           
   745                           	psect	text2
   746  0087                     __ptext2:	
   747 ;; *************** function _isr *****************
   748 ;; Defined at:
   749 ;;		line 60 in file "LAB9.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          4       0       0       0       0
   766 ;;      Totals:         4       0       0       0       0
   767 ;;Total ram usage:        4 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 1
   770 ;; This function calls:
   771 ;;		_tmr0
   772 ;; This function is called by:
   773 ;;		Interrupt level 1
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _isr
   779  0087                     _isr:
   780  0087                     i1l780:
   781                           
   782                           ;LAB9.c: 61:     if(PIR1bits.ADIF){
   783  0087  1283               	bcf	3,5	;RP0=0, select bank0
   784  0088  1303               	bcf	3,6	;RP1=0, select bank0
   785  0089  1F0C               	btfss	12,6	;volatile
   786  008A  288C               	goto	u2_21
   787  008B  288D               	goto	u2_20
   788  008C                     u2_21:
   789  008C  28CB               	goto	i1l792
   790  008D                     u2_20:
   791  008D                     i1l782:
   792                           
   793                           ;LAB9.c: 62:         if(ADCON0bits.CHS == 1){
   794  008D  0C1F               	rrf	31,w	;volatile
   795  008E  00F0               	movwf	??_isr
   796  008F  0C70               	rrf	??_isr,w
   797  0090  390F               	andlw	15
   798  0091  3A01               	xorlw	1
   799  0092  1D03               	skipz
   800  0093  2895               	goto	u3_21
   801  0094  2896               	goto	u3_20
   802  0095                     u3_21:
   803  0095  289D               	goto	i1l786
   804  0096                     u3_20:
   805  0096                     i1l784:
   806                           
   807                           ;LAB9.c: 63:             CCPR2L = (ADRESH>>1)+128;
   808  0096  081E               	movf	30,w	;volatile
   809  0097  00F0               	movwf	??_isr
   810  0098  1003               	clrc
   811  0099  0C70               	rrf	??_isr,w
   812  009A  3E80               	addlw	128
   813  009B  009B               	movwf	27	;volatile
   814                           
   815                           ;LAB9.c: 65:         }
   816  009C  28CA               	goto	i1l790
   817  009D                     i1l786:
   818  009D  0C1F               	rrf	31,w	;volatile
   819  009E  00F0               	movwf	??_isr
   820  009F  0C70               	rrf	??_isr,w
   821  00A0  390F               	andlw	15
   822  00A1  3A00               	xorlw	0
   823  00A2  1D03               	skipz
   824  00A3  28A5               	goto	u4_21
   825  00A4  28A6               	goto	u4_20
   826  00A5                     u4_21:
   827  00A5  28CA               	goto	i1l790
   828  00A6                     u4_20:
   829  00A6                     i1l788:
   830                           
   831                           ;LAB9.c: 67:             CCPR1L = (ADRESH>>1)+124;
   832  00A6  081E               	movf	30,w	;volatile
   833  00A7  00F0               	movwf	??_isr
   834  00A8  1003               	clrc
   835  00A9  0C70               	rrf	??_isr,w
   836  00AA  3E7C               	addlw	124
   837  00AB  0095               	movwf	21	;volatile
   838                           
   839                           ;LAB9.c: 68:             CCP1CONbits.DC1B1 = ADRESH & 0b01;
   840  00AC  081E               	movf	30,w	;volatile
   841  00AD  3901               	andlw	1
   842  00AE  00F0               	movwf	??_isr
   843  00AF  0EF0               	swapf	??_isr,f
   844  00B0  0DF0               	rlf	??_isr,f
   845  00B1  0817               	movf	23,w	;volatile
   846  00B2  0670               	xorwf	??_isr,w
   847  00B3  39DF               	andlw	-33
   848  00B4  0670               	xorwf	??_isr,w
   849  00B5  0097               	movwf	23	;volatile
   850                           
   851                           ;LAB9.c: 69:             CCP1CONbits.DC1B0 = (ADRESL>>7);
   852  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   853  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   854  00B8  081E               	movf	30,w	;volatile
   855  00B9  00F0               	movwf	??_isr
   856  00BA  3007               	movlw	7
   857  00BB                     u5_25:
   858  00BB  1003               	clrc
   859  00BC  0CF0               	rrf	??_isr,f
   860  00BD  3EFF               	addlw	-1
   861  00BE  1D03               	skipz
   862  00BF  28BB               	goto	u5_25
   863  00C0  0870               	movf	??_isr,w
   864  00C1  00F1               	movwf	??_isr+1
   865  00C2  0EF1               	swapf	??_isr+1,f
   866  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   867  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   868  00C5  0817               	movf	23,w	;volatile
   869  00C6  0671               	xorwf	??_isr+1,w
   870  00C7  39EF               	andlw	-17
   871  00C8  0671               	xorwf	??_isr+1,w
   872  00C9  0097               	movwf	23	;volatile
   873  00CA                     i1l790:
   874                           
   875                           ;LAB9.c: 71:         PIR1bits.ADIF = 0;
   876  00CA  130C               	bcf	12,6	;volatile
   877  00CB                     i1l792:
   878                           
   879                           ;LAB9.c: 73:     if(T0IF){
   880  00CB  1D0B               	btfss	11,2	;volatile
   881  00CC  28CE               	goto	u6_21
   882  00CD  28CF               	goto	u6_20
   883  00CE                     u6_21:
   884  00CE  28D4               	goto	i1l82
   885  00CF                     u6_20:
   886  00CF                     i1l794:
   887                           
   888                           ;LAB9.c: 74:         tmr0();
   889  00CF  120A  118A  2116  120A  118A  	fcall	_tmr0
   890  00D4                     i1l82:
   891  00D4  0873               	movf	??_isr+3,w
   892  00D5  008A               	movwf	10
   893  00D6  0E72               	swapf	??_isr+2,w
   894  00D7  0083               	movwf	3
   895  00D8  0EFE               	swapf	btemp,f
   896  00D9  0E7E               	swapf	btemp,w
   897  00DA  0009               	retfie
   898  00DB                     __end_of_isr:
   899                           
   900                           	psect	intentry
   901  0004                     __pintentry:	
   902                           ;incstack = 0
   903                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   904                           
   905  0004                     interrupt_function:
   906  007E                     saved_w	set	btemp
   907  0004  00FE               	movwf	btemp
   908  0005  0E03               	swapf	3,w
   909  0006  00F2               	movwf	??_isr+2
   910  0007  080A               	movf	10,w
   911  0008  00F3               	movwf	??_isr+3
   912  0009  120A  118A  2887   	ljmp	_isr
   913                           
   914                           	psect	text3
   915  0116                     __ptext3:	
   916 ;; *************** function _tmr0 *****************
   917 ;; Defined at:
   918 ;;		line 178 in file "LAB9.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_isr
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           
   946                           ;psect for function _tmr0
   947  0116                     _tmr0:
   948  0116                     i1l696:	
   949                           ;incstack = 0
   950                           ; Regs used in _tmr0: [wreg]
   951                           
   952                           
   953                           ;LAB9.c: 179:     INTCONbits.T0IF = 0;
   954  0116  110B               	bcf	11,2	;volatile
   955  0117                     i1l698:
   956                           
   957                           ;LAB9.c: 180:     TMR0 = 237;
   958  0117  30ED               	movlw	237
   959  0118  1283               	bcf	3,5	;RP0=0, select bank0
   960  0119  1303               	bcf	3,6	;RP1=0, select bank0
   961  011A  0081               	movwf	1	;volatile
   962  011B                     i1l104:
   963  011B  0008               	return
   964  011C                     __end_of_tmr0:
   965  007E                     btemp	set	126	;btemp
   966  007E                     wtemp0	set	126
   967                           
   968                           	psect	config
   969                           
   970                           ;Config register CONFIG1 @ 0x2007
   971                           ;	Oscillator Selection bits
   972                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   973                           ;	Watchdog Timer Enable bit
   974                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   975                           ;	Power-up Timer Enable bit
   976                           ;	PWRTE = OFF, PWRT disabled
   977                           ;	RE3/MCLR pin function select bit
   978                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   979                           ;	Code Protection bit
   980                           ;	CP = OFF, Program memory code protection is disabled
   981                           ;	Data Code Protection bit
   982                           ;	CPD = OFF, Data memory code protection is disabled
   983                           ;	Brown Out Reset Selection bits
   984                           ;	BOREN = OFF, BOR disabled
   985                           ;	Internal External Switchover bit
   986                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   987                           ;	Fail-Safe Clock Monitor Enabled bit
   988                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   989                           ;	Low Voltage Programming Enable bit
   990                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   991                           ;	In-Circuit Debugger Mode bit
   992                           ;	DEBUG = 0x1, unprogrammed default
   993  2007                     	org	8199
   994  2007  20D4               	dw	8404
   995                           
   996                           ;Config register CONFIG2 @ 0x2008
   997                           ;	Brown-out Reset Selection bit
   998                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   999                           ;	Flash Program Memory Self Write Enable bits
  1000                           ;	WRT = OFF, Write protection off
  1001  2008                     	org	8200
  1002  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       6       5        7.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 22:31:52 2021

                     l98 007D                       u10 0081                       u11 0080  
                     u70 00E7                       u71 00E6                       u80 00F0  
                     u81 00EF                       u90 0103                       u91 0102  
                    l100 0081                      l101 0086                      l710 003A  
                    l702 0024                      l720 003F                      l712 003B  
                    l704 0028                      l800 00E3                      l730 0049  
                    l722 0040                      l714 003C                      l706 0029  
                    l810 0103                      l802 00E7                      l740 0057  
                    l732 004A                      l724 0041                      l716 003D  
                    l708 0036                      l820 010F                      l804 00F0  
                    l750 0060                      l742 0058                      l734 0050  
                    l726 0045                      l718 003E                      l814 0106  
                    l806 00F4                      l760 0069                      l752 0061  
                    l744 0059                      l736 0052                      l728 0048  
                    l808 00FA                      l770 0076                      l762 006D  
                    l754 0062                      l746 005A                      l738 0053  
                    l818 010B                      l772 0077                      l764 0071  
                    l756 0063                      l748 005D                      l774 0079  
                    l766 0073                      l758 0065                      l776 007A  
                    l768 0075                      l778 007C                      l796 00DB  
                    l798 00E0                      u107 00F6                      u117 010D  
                    u127 0055                      _PR2 0092                      _dig 0020  
                    _isr 0087                     ?_isr 0070                     _T0IF 005A  
                   i1l82 00D4                     _TMR0 0001                     u2_20 008D  
                   u2_21 008C                     u3_20 0096                     u3_21 0095  
                   u4_20 00A6                     u4_21 00A5                     u5_25 00BB  
                   u6_20 00CF                     u6_21 00CE                     _digi 007A  
                   _main 00DB                     _tmr0 0116                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  ?_tmr0 0070                    _ANSEL 0188                    i1l104 011B  
                  i1l780 0087                    i1l790 00CA                    i1l782 008D  
                  i1l696 0116                    i1l784 0096                    i1l792 00CB  
                  i1l698 0117                    i1l794 00CF                    i1l786 009D  
                  i1l788 00A6                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _cont2 0078                    _setup 0024                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0116             __end_of_tmr0 011C                   ??_main 0075  
                 ??_tmr0 0070                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B                   ?_setup 0070  
                 _ANSELH 0189             __pdataCOMMON 007B                   saved_w 007E  
__end_of__initialization 0020           __pcstackCOMMON 0070            __end_of_setup 0087  
         _OPTION_REGbits 0081                  ??_setup 0074               __pbssBANK0 0020  
             __pmaintext 00DB               __pintentry 0004                  __ptext1 0024  
                __ptext2 0087                  __ptext3 0116                _T2CONbits 0012  
           __size_of_isr 0054     end_of_initialization 0020                _TRISCbits 0087  
            _CCP1CONbits 0017              _CCP2CONbits 001D            __pidataCOMMON 011C  
    start_initialization 000F              __end_of_isr 00DB              __pbssCOMMON 0076  
              ___latbits 0002           __size_of_setup 0063        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _cont_vol 0076            __size_of_main 003B  
          __size_of_tmr0 0006               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F            _disp_selector 007B  
